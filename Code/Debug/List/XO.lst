
AVRASM ver. 2.1.30  C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm Fri Feb 05 04:49:41 2021

C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1092): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _c=R4
                 	.DEF _c_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00d9 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000033 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000034 0000      	.DB  0x0,0x0
                 
                 _0x4C:
000035 0000
000036 0000
000037 0000
000038 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000039 0000
00003a 0000
00003b 0000
00003c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003d 0000
00003e 0000
00003f 0000
000040 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000041 0000
000042 0000
000043 0000
000044 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000045 0000
000046 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
000047 654c
000048 6576
000049 206c
00004a 3125      	.DB  0x4C,0x65,0x76,0x65,0x6C,0x20,0x25,0x31
00004b 2f64
00004c 6425
00004d 2020
00004e 2020      	.DB  0x64,0x2F,0x25,0x64,0x20,0x20,0x20,0x20
00004f 6425
000050 252d
000051 0064
000052 6c50      	.DB  0x25,0x64,0x2D,0x25,0x64,0x0,0x50,0x6C
000053 7961
000054 7265
000055 5220
000056 4445      	.DB  0x61,0x79,0x65,0x72,0x20,0x52,0x45,0x44
000057 2020
000058 2020
000059 0020
00005a 6c50      	.DB  0x20,0x20,0x20,0x20,0x20,0x0,0x50,0x6C
00005b 7961
00005c 7265
00005d 4720
00005e 4552      	.DB  0x61,0x79,0x65,0x72,0x20,0x47,0x52,0x45
00005f 4e45
000060 2020
000061 2020
000062 0020      	.DB  0x45,0x4E,0x20,0x20,0x20,0x20,0x20,0x0
000063 6c50
000064 7961
000065 7265
000066 4720      	.DB  0x50,0x6C,0x61,0x79,0x65,0x72,0x20,0x47
000067 4552
000068 4e45
000069 5720
00006a 6e69      	.DB  0x52,0x45,0x45,0x4E,0x20,0x57,0x69,0x6E
00006b 2e2e
00006c 0021
00006d 6c50
00006e 7961      	.DB  0x2E,0x2E,0x21,0x0,0x50,0x6C,0x61,0x79
00006f 7265
000070 5220
000071 4445
000072 5720      	.DB  0x65,0x72,0x20,0x52,0x45,0x44,0x20,0x57
000073 6e69
000074 2e2e
000075 0021
000076 6552      	.DB  0x69,0x6E,0x2E,0x2E,0x21,0x0,0x52,0x65
000077 6573
000078 6974
000079 676e
00007a 2e2e      	.DB  0x73,0x65,0x74,0x69,0x6E,0x67,0x2E,0x2E
00007b 002e
00007c 6c50
00007d 7961
00007e 7265      	.DB  0x2E,0x0,0x50,0x6C,0x61,0x79,0x65,0x72
00007f 4720
000080 4552
000081 4e45
000082 203a      	.DB  0x20,0x47,0x52,0x45,0x45,0x4E,0x3A,0x20
000083 6425
000084 5000
000085 616c
000086 6579      	.DB  0x25,0x64,0x0,0x50,0x6C,0x61,0x79,0x65
000087 2072
000088 4552
000089 3a44
00008a 2520      	.DB  0x72,0x20,0x52,0x45,0x44,0x3A,0x20,0x25
00008b 0064      	.DB  0x64,0x0
                 _0x2000003:
00008c c080      	.DB  0x80,0xC0
                 _0x2040060:
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1165): warning: .cseg .db misalignment - padding zero byte
00008d 0001      	.DB  0x1
                 _0x2040000:
00008e 4e2d
00008f 4e41
000090 4900
000091 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ali_s\Desktop\XO_Final\Code\Debug\List\XO.asm(1168): warning: .cseg .db misalignment - padding zero byte
000092 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000093 0001      	.DW  0x01
000094 0002      	.DW  0x02
000095 0066      	.DW  __REG_BIT_VARS*2
                 
000096 0002      	.DW  0x02
000097 0004      	.DW  0x04
000098 0068      	.DW  __REG_VARS*2
                 
000099 0010      	.DW  0x10
00009a 0260      	.DW  _0x54
00009b 00a4      	.DW  _0x0*2+22
                 
00009c 0012      	.DW  0x12
00009d 0270      	.DW  _0x54+16
00009e 00b4      	.DW  _0x0*2+38
                 
00009f 0014      	.DW  0x14
0000a0 0282      	.DW  _0x54+34
0000a1 00c6      	.DW  _0x0*2+56
                 
0000a2 0014      	.DW  0x14
0000a3 0296      	.DW  _0x54+54
0000a4 00c6      	.DW  _0x0*2+56
                 
0000a5 0014      	.DW  0x14
0000a6 02aa      	.DW  _0x54+74
0000a7 00c6      	.DW  _0x0*2+56
                 
0000a8 0014      	.DW  0x14
0000a9 02be      	.DW  _0x54+94
0000aa 00c6      	.DW  _0x0*2+56
                 
0000ab 0014      	.DW  0x14
0000ac 02d2      	.DW  _0x54+114
0000ad 00c6      	.DW  _0x0*2+56
                 
0000ae 0014      	.DW  0x14
0000af 02e6      	.DW  _0x54+134
0000b0 00c6      	.DW  _0x0*2+56
                 
0000b1 0014      	.DW  0x14
0000b2 02fa      	.DW  _0x54+154
0000b3 00c6      	.DW  _0x0*2+56
                 
0000b4 0014      	.DW  0x14
0000b5 030e      	.DW  _0x54+174
0000b6 00c6      	.DW  _0x0*2+56
                 
0000b7 0012      	.DW  0x12
0000b8 0322      	.DW  _0x54+194
0000b9 00da      	.DW  _0x0*2+76
                 
0000ba 0012      	.DW  0x12
0000bb 0334      	.DW  _0x54+212
0000bc 00da      	.DW  _0x0*2+76
                 
0000bd 0012      	.DW  0x12
0000be 0346      	.DW  _0x54+230
0000bf 00da      	.DW  _0x0*2+76
                 
0000c0 0012      	.DW  0x12
0000c1 0358      	.DW  _0x54+248
0000c2 00da      	.DW  _0x0*2+76
                 
0000c3 0012      	.DW  0x12
0000c4 036a      	.DW  _0x54+266
0000c5 00da      	.DW  _0x0*2+76
                 
0000c6 0012      	.DW  0x12
0000c7 037c      	.DW  _0x54+284
0000c8 00da      	.DW  _0x0*2+76
                 
0000c9 0012      	.DW  0x12
0000ca 038e      	.DW  _0x54+302
0000cb 00da      	.DW  _0x0*2+76
                 
0000cc 0012      	.DW  0x12
0000cd 03a0      	.DW  _0x54+320
0000ce 00da      	.DW  _0x0*2+76
                 
0000cf 000c      	.DW  0x0C
0000d0 03b2      	.DW  _0x54+338
0000d1 00ec      	.DW  _0x0*2+94
                 
0000d2 0002      	.DW  0x02
0000d3 03d0      	.DW  __base_y_G100
0000d4 0118      	.DW  _0x2000003*2
                 
0000d5 0001      	.DW  0x01
0000d6 03d4      	.DW  __seed_G102
0000d7 011a      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
0000d8 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000d9 94f8      	CLI
0000da 27ee      	CLR  R30
0000db bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000dc e0f1      	LDI  R31,1
0000dd bffb      	OUT  GICR,R31
0000de bfeb      	OUT  GICR,R30
0000df bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000e0 e08d      	LDI  R24,(14-2)+1
0000e1 e0a2      	LDI  R26,2
0000e2 27bb      	CLR  R27
                 __CLEAR_REG:
0000e3 93ed      	ST   X+,R30
0000e4 958a      	DEC  R24
0000e5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000e6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000e7 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000e8 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0000e9 93ed      	ST   X+,R30
0000ea 9701      	SBIW R24,1
0000eb f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000ec e2e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000ed e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ee 9185      	LPM  R24,Z+
0000ef 9195      	LPM  R25,Z+
0000f0 9700      	SBIW R24,0
0000f1 f061      	BREQ __GLOBAL_INI_END
0000f2 91a5      	LPM  R26,Z+
0000f3 91b5      	LPM  R27,Z+
0000f4 9005      	LPM  R0,Z+
0000f5 9015      	LPM  R1,Z+
0000f6 01bf      	MOVW R22,R30
0000f7 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000f8 9005      	LPM  R0,Z+
0000f9 920d      	ST   X+,R0
0000fa 9701      	SBIW R24,1
0000fb f7e1      	BRNE __GLOBAL_INI_LOOP
0000fc 01fb      	MOVW R30,R22
0000fd cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000fe e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ff bfed      	OUT  SPL,R30
000100 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000101 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000102 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000103 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000104 940c 01c5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;#define ROUNDS 3
                 ;
                 ;#define gled1 PORTC.0
                 ;#define gled2 PORTC.1
                 ;#define gled3 PORTC.2
                 ;#define gled4 PORTC.3
                 ;#define gled5 PORTC.4
                 ;#define gled6 PORTC.5
                 ;#define gled7 PORTC.6
                 ;#define gled8 PORTC.7
                 ;#define gled9 PORTB.6
                 ;
                 ;#define rled1 PORTD.0
                 ;#define rled2 PORTD.1
                 ;#define rled3 PORTD.2
                 ;#define rled4 PORTD.3
                 ;#define rled5 PORTD.4
                 ;#define rled6 PORTD.5
                 ;#define rled7 PORTD.6
                 ;#define rled8 PORTD.7
                 ;#define rled9 PORTB.7
                 ;
                 ;
                 ;int pressed[9];
                 ;int c=0;
                 ;bit player=0;
                 ;
                 ;
                 ;int read_key()
                 ; 0000 0024 {
                 
                 	.CSEG
                 _read_key:
                 ; .FSTART _read_key
                 ; 0000 0025 int i=0;
                 ; 0000 0026 DDRB =0b11000111;
000106 940e 070e 	CALL SUBOPT_0x0
                 ;	i -> R16,R17
000108 ece7      	LDI  R30,LOW(199)
000109 bbe7      	OUT  0x17,R30
                 ; 0000 0027 PORTB=(PORTB.7<<7)|(PORTB.6<<6)|(0b111111);
00010a e0a0      	LDI  R26,0
00010b 99c7      	SBIC 0x18,7
00010c e0a1      	LDI  R26,1
00010d 2fea      	MOV  R30,R26
00010e 95e7      	ROR  R30
00010f e0e0      	LDI  R30,0
000110 95e7      	ROR  R30
000111 2e0e      	MOV  R0,R30
000112 e0a0      	LDI  R26,0
000113 99c6      	SBIC 0x18,6
000114 e0a1      	LDI  R26,1
000115 2fea      	MOV  R30,R26
000116 95e2      	SWAP R30
000117 7fe0      	ANDI R30,0xF0
000118 0fee      	LSL  R30
000119 0fee      	LSL  R30
00011a 29e0      	OR   R30,R0
00011b 63ef      	ORI  R30,LOW(0x3F)
00011c bbe8      	OUT  0x18,R30
                 ; 0000 0028 
                 ; 0000 0029 while(i==0)
                 _0x3:
00011d 2e00      	MOV  R0,R16
00011e 2a01      	OR   R0,R17
00011f f5d1      	BRNE _0x5
                 ; 0000 002A  {
                 ; 0000 002B   PORTB.0=0;
000120 98c0      	CBI  0x18,0
                 ; 0000 002C   delay_ms(1);
000121 940e 0713 	CALL SUBOPT_0x1
                 ; 0000 002D        if(PINB.3==0){i=1;break;}
000123 99b3      	SBIC 0x16,3
000124 c003      	RJMP _0x8
                +
000125 e001     +LDI R16 , LOW ( 1 )
000126 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
000127 c032      	RJMP _0x5
                 ; 0000 002E   else if(PINB.4==0){i=4;break;}
                 _0x8:
000128 99b4      	SBIC 0x16,4
000129 c003      	RJMP _0xA
                +
00012a e004     +LDI R16 , LOW ( 4 )
00012b e010     +LDI R17 , HIGH ( 4 )
                 	__GETWRN 16,17,4
00012c c02d      	RJMP _0x5
                 ; 0000 002F   else if(PINB.5==0){i=7;break;}
                 _0xA:
00012d 99b5      	SBIC 0x16,5
00012e c003      	RJMP _0xC
                +
00012f e007     +LDI R16 , LOW ( 7 )
000130 e010     +LDI R17 , HIGH ( 7 )
                 	__GETWRN 16,17,7
000131 c028      	RJMP _0x5
                 ; 0000 0030   PORTB.0=1;
                 _0xC:
000132 9ac0      	SBI  0x18,0
                 ; 0000 0031   PORTB.1=0;
000133 98c1      	CBI  0x18,1
                 ; 0000 0032   delay_ms(1);
000134 940e 0713 	CALL SUBOPT_0x1
                 ; 0000 0033        if(PINB.3==0){i=2;break;}
000136 99b3      	SBIC 0x16,3
000137 c003      	RJMP _0x11
                +
000138 e002     +LDI R16 , LOW ( 2 )
000139 e010     +LDI R17 , HIGH ( 2 )
                 	__GETWRN 16,17,2
00013a c01f      	RJMP _0x5
                 ; 0000 0034   else if(PINB.4==0){i=5;break;}
                 _0x11:
00013b 99b4      	SBIC 0x16,4
00013c c003      	RJMP _0x13
                +
00013d e005     +LDI R16 , LOW ( 5 )
00013e e010     +LDI R17 , HIGH ( 5 )
                 	__GETWRN 16,17,5
00013f c01a      	RJMP _0x5
                 ; 0000 0035   else if(PINB.5==0){i=8;break;}
                 _0x13:
000140 99b5      	SBIC 0x16,5
000141 c003      	RJMP _0x15
                +
000142 e008     +LDI R16 , LOW ( 8 )
000143 e010     +LDI R17 , HIGH ( 8 )
                 	__GETWRN 16,17,8
000144 c015      	RJMP _0x5
                 ; 0000 0036   PORTB.1=1;
                 _0x15:
000145 9ac1      	SBI  0x18,1
                 ; 0000 0037   PORTB.2=0;
000146 98c2      	CBI  0x18,2
                 ; 0000 0038   delay_ms(1);
000147 940e 0713 	CALL SUBOPT_0x1
                 ; 0000 0039        if(PINB.3==0){i=3;break;}
000149 99b3      	SBIC 0x16,3
00014a c003      	RJMP _0x1A
                +
00014b e003     +LDI R16 , LOW ( 3 )
00014c e010     +LDI R17 , HIGH ( 3 )
                 	__GETWRN 16,17,3
00014d c00c      	RJMP _0x5
                 ; 0000 003A   else if(PINB.4==0){i=6;break;}
                 _0x1A:
00014e 99b4      	SBIC 0x16,4
00014f c003      	RJMP _0x1C
                +
000150 e006     +LDI R16 , LOW ( 6 )
000151 e010     +LDI R17 , HIGH ( 6 )
                 	__GETWRN 16,17,6
000152 c007      	RJMP _0x5
                 ; 0000 003B   else if(PINB.5==0){i=9;break;}
                 _0x1C:
000153 99b5      	SBIC 0x16,5
000154 c003      	RJMP _0x1E
                +
000155 e009     +LDI R16 , LOW ( 9 )
000156 e010     +LDI R17 , HIGH ( 9 )
                 	__GETWRN 16,17,9
000157 c002      	RJMP _0x5
                 ; 0000 003C   PORTB.2=1;
                 _0x1E:
000158 9ac2      	SBI  0x18,2
                 ; 0000 003D  }
000159 cfc3      	RJMP _0x3
                 _0x5:
                 ; 0000 003E 
                 ; 0000 003F delay_ms(50);
00015a e3a2      	LDI  R26,LOW(50)
00015b e0b0      	LDI  R27,0
00015c 940e 0877 	CALL _delay_ms
                 ; 0000 0040 return i;
00015e 01f8      	MOVW R30,R16
00015f c062      	RJMP _0x20C0003
                 ; 0000 0041 }
                 ; .FEND
                 ;
                 ;int check_key(int n)
                 ; 0000 0044 {
                 _check_key:
                 ; .FSTART _check_key
                 ; 0000 0045 int i=0;
                 ; 0000 0046 for(i=0;i<9;i++)
000160 93ba      	ST   -Y,R27
000161 93aa      	ST   -Y,R26
000162 940e 070e 	CALL SUBOPT_0x0
                 ;	n -> Y+2
                 ;	i -> R16,R17
                +
000164 e000     +LDI R16 , LOW ( 0 )
000165 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x22:
                +
000166 3009     +CPI R16 , LOW ( 9 )
000167 e0e0     +LDI R30 , HIGH ( 9 )
000168 071e     +CPC R17 , R30
                 	__CPWRN 16,17,9
000169 f47c      	BRGE _0x23
                 ; 0000 0047  {
                 ; 0000 0048  if(n==pressed[i])
00016a 940e 0717 	CALL SUBOPT_0x2
00016c 940e 08cf 	CALL __GETW1P
00016e 81aa      	LDD  R26,Y+2
00016f 81bb      	LDD  R27,Y+2+1
000170 17ea      	CP   R30,R26
000171 07fb      	CPC  R31,R27
000172 f419      	BRNE _0x24
                 ; 0000 0049  return 0;
000173 e0e0      	LDI  R30,LOW(0)
000174 e0f0      	LDI  R31,HIGH(0)
000175 c013      	RJMP _0x20C0004
                 ; 0000 004A  }
                 _0x24:
                +
000176 5f0f     +SUBI R16 , LOW ( - 1 )
000177 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000178 cfed      	RJMP _0x22
                 _0x23:
                 ; 0000 004B pressed[c]=n;
000179 01f2      	MOVW R30,R4
00017a ebae      	LDI  R26,LOW(_pressed)
00017b e0b3      	LDI  R27,HIGH(_pressed)
00017c 0fee      	LSL  R30
00017d 1fff      	ROL  R31
00017e 0fea      	ADD  R30,R26
00017f 1ffb      	ADC  R31,R27
000180 81aa      	LDD  R26,Y+2
000181 81bb      	LDD  R27,Y+2+1
000182 83a0      	STD  Z+0,R26
000183 83b1      	STD  Z+1,R27
                 ; 0000 004C c++;
000184 01f2      	MOVW R30,R4
000185 9631      	ADIW R30,1
000186 012f      	MOVW R4,R30
                 ; 0000 004D return n;
000187 81ea      	LDD  R30,Y+2
000188 81fb      	LDD  R31,Y+2+1
                 _0x20C0004:
000189 8119      	LDD  R17,Y+1
00018a 8108      	LDD  R16,Y+0
00018b 9624      	ADIW R28,4
00018c 9508      	RET
                 ; 0000 004E }
                 ; .FEND
                 ;
                 ;void clear()
                 ; 0000 0051 {
                 _clear:
                 ; .FSTART _clear
                 ; 0000 0052 int i=0;
                 ; 0000 0053 gled9=0;
00018d 940e 070e 	CALL SUBOPT_0x0
                 ;	i -> R16,R17
00018f 98c6      	CBI  0x18,6
                 ; 0000 0054 rled9=0;
000190 98c7      	CBI  0x18,7
                 ; 0000 0055 delay_ms(100);
000191 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 0056 gled8=0;
000193 98af      	CBI  0x15,7
                 ; 0000 0057 rled8=0;
000194 9897      	CBI  0x12,7
                 ; 0000 0058 delay_ms(100);
000195 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 0059 gled7=0;
000197 98ae      	CBI  0x15,6
                 ; 0000 005A rled7=0;
000198 9896      	CBI  0x12,6
                 ; 0000 005B delay_ms(100);
000199 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 005C gled4=0;
00019b 98ab      	CBI  0x15,3
                 ; 0000 005D rled4=0;
00019c 9893      	CBI  0x12,3
                 ; 0000 005E delay_ms(100);
00019d 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 005F gled5=0;
00019f 98ac      	CBI  0x15,4
                 ; 0000 0060 rled5=0;
0001a0 9894      	CBI  0x12,4
                 ; 0000 0061 delay_ms(100);
0001a1 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 0062 gled6=0;
0001a3 98ad      	CBI  0x15,5
                 ; 0000 0063 rled6=0;
0001a4 9895      	CBI  0x12,5
                 ; 0000 0064 delay_ms(100);
0001a5 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 0065 gled3=0;
0001a7 98aa      	CBI  0x15,2
                 ; 0000 0066 rled3=0;
0001a8 9892      	CBI  0x12,2
                 ; 0000 0067 delay_ms(100);
0001a9 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 0068 gled2=0;
0001ab 98a9      	CBI  0x15,1
                 ; 0000 0069 rled2=0;
0001ac 9891      	CBI  0x12,1
                 ; 0000 006A delay_ms(100);
0001ad 940e 071f 	CALL SUBOPT_0x3
                 ; 0000 006B gled1=0;
0001af 98a8      	CBI  0x15,0
                 ; 0000 006C rled1=0;
0001b0 9890      	CBI  0x12,0
                 ; 0000 006D c=0;
0001b1 2444      	CLR  R4
0001b2 2455      	CLR  R5
                 ; 0000 006E for(i=0;i<9;i++)
                +
0001b3 e000     +LDI R16 , LOW ( 0 )
0001b4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4A:
                +
0001b5 3009     +CPI R16 , LOW ( 9 )
0001b6 e0e0     +LDI R30 , HIGH ( 9 )
0001b7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,9
0001b8 f44c      	BRGE _0x4B
                 ; 0000 006F  {
                 ; 0000 0070   pressed[i]=0;
0001b9 940e 0717 	CALL SUBOPT_0x2
0001bb e0e0      	LDI  R30,LOW(0)
0001bc e0f0      	LDI  R31,HIGH(0)
0001bd 93ed      	ST   X+,R30
0001be 93fc      	ST   X,R31
                 ; 0000 0071  }
                +
0001bf 5f0f     +SUBI R16 , LOW ( - 1 )
0001c0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001c1 cff3      	RJMP _0x4A
                 _0x4B:
                 ; 0000 0072 }
                 _0x20C0003:
0001c2 9109      	LD   R16,Y+
0001c3 9119      	LD   R17,Y+
0001c4 9508      	RET
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0075 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0076 // Declare your local variables here
                 ; 0000 0077 int key,i,p1=0,p2=0;
                 ; 0000 0078 char lcd_b[32];
                 ; 0000 0079 int hasAi = 0;
                 ; 0000 007A 
                 ; 0000 007B // Input/Output Ports initialization
                 ; 0000 007C // Port A initialization
                 ; 0000 007D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 007E DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0001c5 97a4      	SBIW R28,36
0001c6 e284      	LDI  R24,36
0001c7 e0a0      	LDI  R26,LOW(0)
0001c8 e0b0      	LDI  R27,HIGH(0)
0001c9 e6ea      	LDI  R30,LOW(_0x4C*2)
0001ca e0f0      	LDI  R31,HIGH(_0x4C*2)
0001cb 940e 08ea 	CALL __INITLOCB
                 ;	key -> R16,R17
                 ;	i -> R18,R19
                 ;	p1 -> R20,R21
                 ;	p2 -> Y+34
                 ;	lcd_b -> Y+2
                 ;	hasAi -> Y+0
                +
0001cd e040     +LDI R20 , LOW ( 0 )
0001ce e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0001cf e0e0      	LDI  R30,LOW(0)
0001d0 bbea      	OUT  0x1A,R30
                 ; 0000 007F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0080 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0001d1 bbeb      	OUT  0x1B,R30
                 ; 0000 0081 
                 ; 0000 0082 // Port B initialization
                 ; 0000 0083 // Function: Bit7=Out Bit6=Out Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0084 DDRB=(1<<DDB7) | (1<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0001d2 ece0      	LDI  R30,LOW(192)
0001d3 bbe7      	OUT  0x17,R30
                 ; 0000 0085 // State: Bit7=0 Bit6=0 Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0086 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0001d4 e0e0      	LDI  R30,LOW(0)
0001d5 bbe8      	OUT  0x18,R30
                 ; 0000 0087 
                 ; 0000 0088 // Port C initialization
                 ; 0000 0089 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 008A DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0001d6 efef      	LDI  R30,LOW(255)
0001d7 bbe4      	OUT  0x14,R30
                 ; 0000 008B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 008C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0001d8 e0e0      	LDI  R30,LOW(0)
0001d9 bbe5      	OUT  0x15,R30
                 ; 0000 008D 
                 ; 0000 008E // Port D initialization
                 ; 0000 008F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0090 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
0001da efef      	LDI  R30,LOW(255)
0001db bbe1      	OUT  0x11,R30
                 ; 0000 0091 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0092 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0001dc e0e0      	LDI  R30,LOW(0)
0001dd bbe2      	OUT  0x12,R30
                 ; 0000 0093 
                 ; 0000 0094 // Alphanumeric LCD initialization
                 ; 0000 0095 // Connections are specified in the
                 ; 0000 0096 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0097 // RS - PORTA Bit 0
                 ; 0000 0098 // RD - PORTA Bit 1
                 ; 0000 0099 // EN - PORTA Bit 2
                 ; 0000 009A // D4 - PORTA Bit 4
                 ; 0000 009B // D5 - PORTA Bit 5
                 ; 0000 009C // D6 - PORTA Bit 6
                 ; 0000 009D // D7 - PORTA Bit 7
                 ; 0000 009E // Characters/line: 16
                 ; 0000 009F lcd_init(16);
0001de e1a0      	LDI  R26,LOW(16)
0001df 940e 0502 	CALL _lcd_init
                 ; 0000 00A0 
                 ; 0000 00A1 hasAi = PINA & (1 << PINA3);
0001e1 b3e9      	IN   R30,0x19
0001e2 70e8      	ANDI R30,LOW(0x8)
0001e3 e0f0      	LDI  R31,0
0001e4 83e8      	ST   Y,R30
0001e5 83f9      	STD  Y+1,R31
                 ; 0000 00A2 for(i=1;i<=ROUNDS;i++)
                +
0001e6 e021     +LDI R18 , LOW ( 1 )
0001e7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x4E:
                +
0001e8 3024     +CPI R18 , LOW ( 4 )
0001e9 e0e0     +LDI R30 , HIGH ( 4 )
0001ea 073e     +CPC R19 , R30
                 	__CPWRN 18,19,4
0001eb f00c      	BRLT PC+2
0001ec c290      	RJMP _0x4F
                 ; 0000 00A3  {
                 ; 0000 00A4 
                 ; 0000 00A5  lcd_clear();
0001ed 940e 0723 	CALL SUBOPT_0x4
                 ; 0000 00A6  sprintf(lcd_b,"Level %1d/%d    %d-%d",i,ROUNDS,p1,p2);
                +
0001ef e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001f1 93fa      	ST   -Y,R31
0001f2 93ea      	ST   -Y,R30
0001f3 01f9      	MOVW R30,R18
0001f4 940e 072a 	CALL SUBOPT_0x5
                +
0001f6 e0e3     +LDI R30 , LOW ( 0x3 )
0001f7 e0f0     +LDI R31 , HIGH ( 0x3 )
0001f8 e060     +LDI R22 , BYTE3 ( 0x3 )
0001f9 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0001fa 940e 08d7 	CALL __PUTPARD1
0001fc 01fa      	MOVW R30,R20
0001fd 940e 072a 	CALL SUBOPT_0x5
0001ff a9ea      	LDD  R30,Y+50
000200 a9fb      	LDD  R31,Y+50+1
000201 940e 072a 	CALL SUBOPT_0x5
000203 e180      	LDI  R24,16
000204 940e 06a4 	CALL _sprintf
000206 9664      	ADIW R28,20
                 ; 0000 00A7  lcd_gotoxy(0,0);
000207 940e 072f 	CALL SUBOPT_0x6
                 ; 0000 00A8  lcd_puts(lcd_b);
                 ; 0000 00A9  while (1)
                 _0x50:
                 ; 0000 00AA       {
                 ; 0000 00AB       lcd_gotoxy(0,1);
000209 940e 0738 	CALL SUBOPT_0x7
                 ; 0000 00AC 
                 ; 0000 00AD         if(player==1){
00020b fe20      	SBRS R2,0
00020c c003      	RJMP _0x53
                 ; 0000 00AE             lcd_puts("Player RED     ");
                +
00020d e6a0     +LDI R26 , LOW ( _0x54 + ( 0 ) )
00020e e0b2     +LDI R27 , HIGH ( _0x54 + ( 0 ) )
                 	__POINTW2MN _0x54,0
00020f c002      	RJMP _0x298
                 ; 0000 00AF         } else{
                 _0x53:
                 ; 0000 00B0             lcd_puts("Player GREEN     ");
                +
000210 e7a0     +LDI R26 , LOW ( _0x54 + ( 16 ) )
000211 e0b2     +LDI R27 , HIGH ( _0x54 + ( 16 ) )
                 	__POINTW2MN _0x54,16
                 _0x298:
000212 940e 04f1 	CALL _lcd_puts
                 ; 0000 00B1         }
                 ; 0000 00B2 
                 ; 0000 00B3       if (player || !hasAi){
000214 fc20      	SBRC R2,0
000215 c004      	RJMP _0x57
000216 81e8      	LD   R30,Y
000217 81f9      	LDD  R31,Y+1
000218 9730      	SBIW R30,0
000219 f429      	BRNE _0x56
                 _0x57:
                 ; 0000 00B4           key=check_key(read_key());
00021a deeb      	RCALL _read_key
00021b 01df      	MOVW R26,R30
00021c df43      	RCALL _check_key
00021d 018f      	MOVW R16,R30
                 ; 0000 00B5       } else {
00021e c002      	RJMP _0x59
                 _0x56:
                 ; 0000 00B6           key = -1;
                +
00021f ef0f     +LDI R16 , LOW ( - 1 )
000220 ef1f     +LDI R17 , HIGH ( - 1 )
                 	__GETWRN 16,17,-1
                 ; 0000 00B7       }
                 _0x59:
                 ; 0000 00B8       if(key!=0)
000221 2e00      	MOV  R0,R16
000222 2a01      	OR   R0,R17
000223 f409      	BRNE PC+2
000224 c252      	RJMP _0x5A
                 ; 0000 00B9        {
                 ; 0000 00BA        if(player==0)
000225 fc20      	SBRC R2,0
000226 c0db      	RJMP _0x5B
                 ; 0000 00BB         {
                 ; 0000 00BC             if (hasAi){
000227 81e8      	LD   R30,Y
000228 81f9      	LDD  R31,Y+1
000229 9730      	SBIW R30,0
00022a f409      	BRNE PC+2
00022b c0a1      	RJMP _0x5C
                 ; 0000 00BD 
                 ; 0000 00BE                 int shouldContinue = 1;
                 ; 0000 00BF                 key = ((rand() + 5) % 9) + 1;
00022c 9722      	SBIW R28,2
00022d e0e1      	LDI  R30,LOW(1)
00022e 83e8      	ST   Y,R30
00022f e0e0      	LDI  R30,LOW(0)
000230 83e9      	STD  Y+1,R30
                 ;	p2 -> Y+36
                 ;	lcd_b -> Y+4
                 ;	hasAi -> Y+2
                 ;	shouldContinue -> Y+0
000231 940e 06d8 	CALL _rand
000233 9635      	ADIW R30,5
000234 01df      	MOVW R26,R30
000235 e0e9      	LDI  R30,LOW(9)
000236 e0f0      	LDI  R31,HIGH(9)
000237 940e 08c1 	CALL __MODW21
000239 9631      	ADIW R30,1
00023a 018f      	MOVW R16,R30
                 ; 0000 00C0                 while(shouldContinue){
                 _0x5D:
00023b 81e8      	LD   R30,Y
00023c 81f9      	LDD  R31,Y+1
00023d 9730      	SBIW R30,0
00023e f409      	BRNE PC+2
00023f c08b      	RJMP _0x5F
                 ; 0000 00C1                     if (key==0){
000240 2e00      	MOV  R0,R16
000241 2a01      	OR   R0,R17
000242 f411      	BRNE _0x60
                 ; 0000 00C2                         key=9;
                +
000243 e009     +LDI R16 , LOW ( 9 )
000244 e010     +LDI R17 , HIGH ( 9 )
                 	__GETWRN 16,17,9
                 ; 0000 00C3                     }
                 ; 0000 00C4                     switch(key)
                 _0x60:
000245 940e 073d 	CALL SUBOPT_0x8
                 ; 0000 00C5                     {
                 ; 0000 00C6                       case 1:
000247 f459      	BRNE _0x64
                 ; 0000 00C7                         if (gled1 || rled1){
000248 99a8      	SBIC 0x15,0
000249 c002      	RJMP _0x66
00024a 9b90      	SBIS 0x12,0
00024b c003      	RJMP _0x65
                 _0x66:
                 ; 0000 00C8                             key--;
                +
00024c 5001     +SUBI R16 , LOW ( 1 )
00024d 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00C9                             break;
00024e c07b      	RJMP _0x63
                 ; 0000 00CA                         }
                 ; 0000 00CB                         check_key(key);
                 _0x65:
00024f 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00CC                         shouldContinue = 0;
                 ; 0000 00CD                         delay_ms(700);
                 ; 0000 00CE                         gled1=1;
000251 9aa8      	SBI  0x15,0
                 ; 0000 00CF                         break;
000252 c077      	RJMP _0x63
                 ; 0000 00D0                       case 2:
                 _0x64:
000253 30e2      	CPI  R30,LOW(0x2)
000254 e0a0      	LDI  R26,HIGH(0x2)
000255 07fa      	CPC  R31,R26
000256 f459      	BRNE _0x6A
                 ; 0000 00D1                         if (gled2 || rled2){
000257 99a9      	SBIC 0x15,1
000258 c002      	RJMP _0x6C
000259 9b91      	SBIS 0x12,1
00025a c003      	RJMP _0x6B
                 _0x6C:
                 ; 0000 00D2                             key--;
                +
00025b 5001     +SUBI R16 , LOW ( 1 )
00025c 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00D3                             break;
00025d c06c      	RJMP _0x63
                 ; 0000 00D4                         }
                 ; 0000 00D5                         check_key(key);
                 _0x6B:
00025e 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00D6                         shouldContinue = 0;
                 ; 0000 00D7                         delay_ms(700);
                 ; 0000 00D8                         gled2=1;
000260 9aa9      	SBI  0x15,1
                 ; 0000 00D9                         break;
000261 c068      	RJMP _0x63
                 ; 0000 00DA                       case 3:
                 _0x6A:
000262 30e3      	CPI  R30,LOW(0x3)
000263 e0a0      	LDI  R26,HIGH(0x3)
000264 07fa      	CPC  R31,R26
000265 f459      	BRNE _0x70
                 ; 0000 00DB                         if (gled3 || rled3){
000266 99aa      	SBIC 0x15,2
000267 c002      	RJMP _0x72
000268 9b92      	SBIS 0x12,2
000269 c003      	RJMP _0x71
                 _0x72:
                 ; 0000 00DC                             key--;
                +
00026a 5001     +SUBI R16 , LOW ( 1 )
00026b 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00DD                             break;
00026c c05d      	RJMP _0x63
                 ; 0000 00DE                         }
                 ; 0000 00DF                         check_key(key);
                 _0x71:
00026d 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00E0                         shouldContinue = 0;
                 ; 0000 00E1                         delay_ms(700);
                 ; 0000 00E2                         gled3=1;
00026f 9aaa      	SBI  0x15,2
                 ; 0000 00E3                         break;
000270 c059      	RJMP _0x63
                 ; 0000 00E4                       case 4:
                 _0x70:
000271 30e4      	CPI  R30,LOW(0x4)
000272 e0a0      	LDI  R26,HIGH(0x4)
000273 07fa      	CPC  R31,R26
000274 f459      	BRNE _0x76
                 ; 0000 00E5                         if (gled4 || rled4) {
000275 99ab      	SBIC 0x15,3
000276 c002      	RJMP _0x78
000277 9b93      	SBIS 0x12,3
000278 c003      	RJMP _0x77
                 _0x78:
                 ; 0000 00E6                             key--;
                +
000279 5001     +SUBI R16 , LOW ( 1 )
00027a 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00E7                             break;
00027b c04e      	RJMP _0x63
                 ; 0000 00E8                         }
                 ; 0000 00E9                         check_key(key);
                 _0x77:
00027c 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00EA                         shouldContinue = 0;
                 ; 0000 00EB                         delay_ms(700);
                 ; 0000 00EC                         gled4=1;
00027e 9aab      	SBI  0x15,3
                 ; 0000 00ED                         break;
00027f c04a      	RJMP _0x63
                 ; 0000 00EE                       case 5:
                 _0x76:
000280 30e5      	CPI  R30,LOW(0x5)
000281 e0a0      	LDI  R26,HIGH(0x5)
000282 07fa      	CPC  R31,R26
000283 f459      	BRNE _0x7C
                 ; 0000 00EF                         if (gled5 || rled5) {
000284 99ac      	SBIC 0x15,4
000285 c002      	RJMP _0x7E
000286 9b94      	SBIS 0x12,4
000287 c003      	RJMP _0x7D
                 _0x7E:
                 ; 0000 00F0                             key--;
                +
000288 5001     +SUBI R16 , LOW ( 1 )
000289 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00F1                             break;
00028a c03f      	RJMP _0x63
                 ; 0000 00F2                         }
                 ; 0000 00F3                         check_key(key);
                 _0x7D:
00028b 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00F4                         shouldContinue = 0;
                 ; 0000 00F5                         delay_ms(700);
                 ; 0000 00F6                         gled5=1;
00028d 9aac      	SBI  0x15,4
                 ; 0000 00F7                         break;
00028e c03b      	RJMP _0x63
                 ; 0000 00F8                       case 6:
                 _0x7C:
00028f 30e6      	CPI  R30,LOW(0x6)
000290 e0a0      	LDI  R26,HIGH(0x6)
000291 07fa      	CPC  R31,R26
000292 f459      	BRNE _0x82
                 ; 0000 00F9                         if (gled6 || rled6) {
000293 99ad      	SBIC 0x15,5
000294 c002      	RJMP _0x84
000295 9b95      	SBIS 0x12,5
000296 c003      	RJMP _0x83
                 _0x84:
                 ; 0000 00FA                             key--;
                +
000297 5001     +SUBI R16 , LOW ( 1 )
000298 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 00FB                             break;
000299 c030      	RJMP _0x63
                 ; 0000 00FC                         }
                 ; 0000 00FD                         check_key(key);
                 _0x83:
00029a 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 00FE                         shouldContinue = 0;
                 ; 0000 00FF                         delay_ms(700);
                 ; 0000 0100                         gled6=1;
00029c 9aad      	SBI  0x15,5
                 ; 0000 0101                         break;
00029d c02c      	RJMP _0x63
                 ; 0000 0102                       case 7:
                 _0x82:
00029e 30e7      	CPI  R30,LOW(0x7)
00029f e0a0      	LDI  R26,HIGH(0x7)
0002a0 07fa      	CPC  R31,R26
0002a1 f459      	BRNE _0x88
                 ; 0000 0103                         if (gled7 || rled7) {
0002a2 99ae      	SBIC 0x15,6
0002a3 c002      	RJMP _0x8A
0002a4 9b96      	SBIS 0x12,6
0002a5 c003      	RJMP _0x89
                 _0x8A:
                 ; 0000 0104                             key--;
                +
0002a6 5001     +SUBI R16 , LOW ( 1 )
0002a7 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0105                             break;
0002a8 c021      	RJMP _0x63
                 ; 0000 0106                         }
                 ; 0000 0107                         check_key(key);
                 _0x89:
0002a9 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 0108                         shouldContinue = 0;
                 ; 0000 0109                         delay_ms(700);
                 ; 0000 010A                         gled7=1;
0002ab 9aae      	SBI  0x15,6
                 ; 0000 010B                         break;
0002ac c01d      	RJMP _0x63
                 ; 0000 010C                       case 8:
                 _0x88:
0002ad 30e8      	CPI  R30,LOW(0x8)
0002ae e0a0      	LDI  R26,HIGH(0x8)
0002af 07fa      	CPC  R31,R26
0002b0 f459      	BRNE _0x8E
                 ; 0000 010D                         if (gled8 || rled8) {
0002b1 99af      	SBIC 0x15,7
0002b2 c002      	RJMP _0x90
0002b3 9b97      	SBIS 0x12,7
0002b4 c003      	RJMP _0x8F
                 _0x90:
                 ; 0000 010E                             key--;
                +
0002b5 5001     +SUBI R16 , LOW ( 1 )
0002b6 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 010F                             break;
0002b7 c012      	RJMP _0x63
                 ; 0000 0110                         }
                 ; 0000 0111                         check_key(key);
                 _0x8F:
0002b8 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 0112                         shouldContinue = 0;
                 ; 0000 0113                         delay_ms(700);
                 ; 0000 0114                         gled8=1;
0002ba 9aaf      	SBI  0x15,7
                 ; 0000 0115                         break;
0002bb c00e      	RJMP _0x63
                 ; 0000 0116                       case 9:
                 _0x8E:
0002bc 30e9      	CPI  R30,LOW(0x9)
0002bd e0a0      	LDI  R26,HIGH(0x9)
0002be 07fa      	CPC  R31,R26
0002bf f451      	BRNE _0x63
                 ; 0000 0117                         if (gled9 || rled9) {
0002c0 99c6      	SBIC 0x18,6
0002c1 c002      	RJMP _0x96
0002c2 9bc7      	SBIS 0x18,7
0002c3 c003      	RJMP _0x95
                 _0x96:
                 ; 0000 0118                             key--;
                +
0002c4 5001     +SUBI R16 , LOW ( 1 )
0002c5 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 ; 0000 0119                             break;
0002c6 c003      	RJMP _0x63
                 ; 0000 011A                         }
                 ; 0000 011B                         check_key(key);
                 _0x95:
0002c7 940e 0742 	CALL SUBOPT_0x9
                 ; 0000 011C                         shouldContinue = 0;
                 ; 0000 011D                         delay_ms(700);
                 ; 0000 011E                         gled9=1;
0002c9 9ac6      	SBI  0x18,6
                 ; 0000 011F                         break;
                 ; 0000 0120                     }
                 _0x63:
                 ; 0000 0121 
                 ; 0000 0122                 }
0002ca cf70      	RJMP _0x5D
                 _0x5F:
                 ; 0000 0123 
                 ; 0000 0124             } else {
0002cb 9622      	ADIW R28,2
0002cc c034      	RJMP _0x9A
                 _0x5C:
                 ; 0000 0125                  switch(key)
0002cd 940e 073d 	CALL SUBOPT_0x8
                 ; 0000 0126                  {
                 ; 0000 0127                   case 1:gled1=1;break;
0002cf f411      	BRNE _0x9E
0002d0 9aa8      	SBI  0x15,0
0002d1 c02f      	RJMP _0x9D
                 ; 0000 0128                   case 2:gled2=1;break;
                 _0x9E:
0002d2 30e2      	CPI  R30,LOW(0x2)
0002d3 e0a0      	LDI  R26,HIGH(0x2)
0002d4 07fa      	CPC  R31,R26
0002d5 f411      	BRNE _0xA1
0002d6 9aa9      	SBI  0x15,1
0002d7 c029      	RJMP _0x9D
                 ; 0000 0129                   case 3:gled3=1;break;
                 _0xA1:
0002d8 30e3      	CPI  R30,LOW(0x3)
0002d9 e0a0      	LDI  R26,HIGH(0x3)
0002da 07fa      	CPC  R31,R26
0002db f411      	BRNE _0xA4
0002dc 9aaa      	SBI  0x15,2
0002dd c023      	RJMP _0x9D
                 ; 0000 012A                   case 4:gled4=1;break;
                 _0xA4:
0002de 30e4      	CPI  R30,LOW(0x4)
0002df e0a0      	LDI  R26,HIGH(0x4)
0002e0 07fa      	CPC  R31,R26
0002e1 f411      	BRNE _0xA7
0002e2 9aab      	SBI  0x15,3
0002e3 c01d      	RJMP _0x9D
                 ; 0000 012B                   case 5:gled5=1;break;
                 _0xA7:
0002e4 30e5      	CPI  R30,LOW(0x5)
0002e5 e0a0      	LDI  R26,HIGH(0x5)
0002e6 07fa      	CPC  R31,R26
0002e7 f411      	BRNE _0xAA
0002e8 9aac      	SBI  0x15,4
0002e9 c017      	RJMP _0x9D
                 ; 0000 012C                   case 6:gled6=1;break;
                 _0xAA:
0002ea 30e6      	CPI  R30,LOW(0x6)
0002eb e0a0      	LDI  R26,HIGH(0x6)
0002ec 07fa      	CPC  R31,R26
0002ed f411      	BRNE _0xAD
0002ee 9aad      	SBI  0x15,5
0002ef c011      	RJMP _0x9D
                 ; 0000 012D                   case 7:gled7=1;break;
                 _0xAD:
0002f0 30e7      	CPI  R30,LOW(0x7)
0002f1 e0a0      	LDI  R26,HIGH(0x7)
0002f2 07fa      	CPC  R31,R26
0002f3 f411      	BRNE _0xB0
0002f4 9aae      	SBI  0x15,6
0002f5 c00b      	RJMP _0x9D
                 ; 0000 012E                   case 8:gled8=1;break;
                 _0xB0:
0002f6 30e8      	CPI  R30,LOW(0x8)
0002f7 e0a0      	LDI  R26,HIGH(0x8)
0002f8 07fa      	CPC  R31,R26
0002f9 f411      	BRNE _0xB3
0002fa 9aaf      	SBI  0x15,7
0002fb c005      	RJMP _0x9D
                 ; 0000 012F                   case 9:gled9=1;break;
                 _0xB3:
0002fc 30e9      	CPI  R30,LOW(0x9)
0002fd e0a0      	LDI  R26,HIGH(0x9)
0002fe 07fa      	CPC  R31,R26
0002ff f409      	BRNE _0x9D
000300 9ac6      	SBI  0x18,6
                 ; 0000 0130                  }
                 _0x9D:
                 ; 0000 0131             }
                 _0x9A:
                 ; 0000 0132         }
                 ; 0000 0133        else {
000301 c034      	RJMP _0xB9
                 _0x5B:
                 ; 0000 0134             switch(key)
000302 940e 073d 	CALL SUBOPT_0x8
                 ; 0000 0135              {
                 ; 0000 0136               case 1:rled1=1;break;
000304 f411      	BRNE _0xBD
000305 9a90      	SBI  0x12,0
000306 c02f      	RJMP _0xBC
                 ; 0000 0137               case 2:rled2=1;break;
                 _0xBD:
000307 30e2      	CPI  R30,LOW(0x2)
000308 e0a0      	LDI  R26,HIGH(0x2)
000309 07fa      	CPC  R31,R26
00030a f411      	BRNE _0xC0
00030b 9a91      	SBI  0x12,1
00030c c029      	RJMP _0xBC
                 ; 0000 0138               case 3:rled3=1;break;
                 _0xC0:
00030d 30e3      	CPI  R30,LOW(0x3)
00030e e0a0      	LDI  R26,HIGH(0x3)
00030f 07fa      	CPC  R31,R26
000310 f411      	BRNE _0xC3
000311 9a92      	SBI  0x12,2
000312 c023      	RJMP _0xBC
                 ; 0000 0139               case 4:rled4=1;break;
                 _0xC3:
000313 30e4      	CPI  R30,LOW(0x4)
000314 e0a0      	LDI  R26,HIGH(0x4)
000315 07fa      	CPC  R31,R26
000316 f411      	BRNE _0xC6
000317 9a93      	SBI  0x12,3
000318 c01d      	RJMP _0xBC
                 ; 0000 013A               case 5:rled5=1;break;
                 _0xC6:
000319 30e5      	CPI  R30,LOW(0x5)
00031a e0a0      	LDI  R26,HIGH(0x5)
00031b 07fa      	CPC  R31,R26
00031c f411      	BRNE _0xC9
00031d 9a94      	SBI  0x12,4
00031e c017      	RJMP _0xBC
                 ; 0000 013B               case 6:rled6=1;break;
                 _0xC9:
00031f 30e6      	CPI  R30,LOW(0x6)
000320 e0a0      	LDI  R26,HIGH(0x6)
000321 07fa      	CPC  R31,R26
000322 f411      	BRNE _0xCC
000323 9a95      	SBI  0x12,5
000324 c011      	RJMP _0xBC
                 ; 0000 013C               case 7:rled7=1;break;
                 _0xCC:
000325 30e7      	CPI  R30,LOW(0x7)
000326 e0a0      	LDI  R26,HIGH(0x7)
000327 07fa      	CPC  R31,R26
000328 f411      	BRNE _0xCF
000329 9a96      	SBI  0x12,6
00032a c00b      	RJMP _0xBC
                 ; 0000 013D               case 8:rled8=1;break;
                 _0xCF:
00032b 30e8      	CPI  R30,LOW(0x8)
00032c e0a0      	LDI  R26,HIGH(0x8)
00032d 07fa      	CPC  R31,R26
00032e f411      	BRNE _0xD2
00032f 9a97      	SBI  0x12,7
000330 c005      	RJMP _0xBC
                 ; 0000 013E               case 9:rled9=1;break;
                 _0xD2:
000331 30e9      	CPI  R30,LOW(0x9)
000332 e0a0      	LDI  R26,HIGH(0x9)
000333 07fa      	CPC  R31,R26
000334 f409      	BRNE _0xBC
000335 9ac7      	SBI  0x18,7
                 ; 0000 013F              }
                 _0xBC:
                 ; 0000 0140         }
                 _0xB9:
                 ; 0000 0141        //---------------------------------
                 ; 0000 0142        if(gled1&&gled2&&gled3)
000336 9ba8      	SBIS 0x15,0
000337 c004      	RJMP _0xD9
000338 9ba9      	SBIS 0x15,1
000339 c002      	RJMP _0xD9
00033a 99aa      	SBIC 0x15,2
00033b c001      	RJMP _0xDA
                 _0xD9:
00033c c00c      	RJMP _0xD8
                 _0xDA:
                 ; 0000 0143         {
                 ; 0000 0144         p1++;
00033d 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 0145         lcd_clear();
                 ; 0000 0146         lcd_puts("Player GREEN Win..!");
                +
00033f e8a2     +LDI R26 , LOW ( _0x54 + ( 34 ) )
000340 e0b2     +LDI R27 , HIGH ( _0x54 + ( 34 ) )
                 	__POINTW2MN _0x54,34
000341 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0147 
                 ; 0000 0148         delay_ms(300);
                 ; 0000 0149         gled1=0;
000343 940e 0756 	CALL SUBOPT_0xC
                 ; 0000 014A         gled2=0;
                 ; 0000 014B         gled3=0;
                 ; 0000 014C         delay_ms(300);
                 ; 0000 014D         gled1=1;
                 ; 0000 014E         gled2=1;
                 ; 0000 014F         gled3=1;
                 ; 0000 0150         delay_ms(300);
                 ; 0000 0151         gled1=0;
000345 940e 0756 	CALL SUBOPT_0xC
                 ; 0000 0152         gled2=0;
                 ; 0000 0153         gled3=0;
                 ; 0000 0154         delay_ms(300);
                 ; 0000 0155         gled1=1;
                 ; 0000 0156         gled2=1;
                 ; 0000 0157         gled3=1;
                 ; 0000 0158         delay_ms(300);
                 ; 0000 0159 
                 ; 0000 015A         clear();
000347 de45      	RCALL _clear
                 ; 0000 015B         break;
000348 c12f      	RJMP _0x52
                 ; 0000 015C         }
                 ; 0000 015D        else if(gled4&&gled5&&gled6)
                 _0xD8:
000349 9bab      	SBIS 0x15,3
00034a c004      	RJMP _0xF5
00034b 9bac      	SBIS 0x15,4
00034c c002      	RJMP _0xF5
00034d 99ad      	SBIC 0x15,5
00034e c001      	RJMP _0xF6
                 _0xF5:
00034f c00c      	RJMP _0xF4
                 _0xF6:
                 ; 0000 015E         {
                 ; 0000 015F         p1++;
000350 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 0160         lcd_clear();
                 ; 0000 0161         lcd_puts("Player GREEN Win..!");
                +
000352 e9a6     +LDI R26 , LOW ( _0x54 + ( 54 ) )
000353 e0b2     +LDI R27 , HIGH ( _0x54 + ( 54 ) )
                 	__POINTW2MN _0x54,54
000354 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0162 
                 ; 0000 0163         delay_ms(300);
                 ; 0000 0164         gled4=0;
000356 940e 0764 	CALL SUBOPT_0xD
                 ; 0000 0165         gled5=0;
                 ; 0000 0166         gled6=0;
                 ; 0000 0167         delay_ms(300);
                 ; 0000 0168         gled4=1;
                 ; 0000 0169         gled5=1;
                 ; 0000 016A         gled6=1;
                 ; 0000 016B         delay_ms(300);
                 ; 0000 016C         gled4=0;
000358 940e 0764 	CALL SUBOPT_0xD
                 ; 0000 016D         gled5=0;
                 ; 0000 016E         gled6=0;
                 ; 0000 016F         delay_ms(300);
                 ; 0000 0170         gled4=1;
                 ; 0000 0171         gled5=1;
                 ; 0000 0172         gled6=1;
                 ; 0000 0173         delay_ms(300);
                 ; 0000 0174 
                 ; 0000 0175         clear();
00035a de32      	RCALL _clear
                 ; 0000 0176         break;
00035b c11c      	RJMP _0x52
                 ; 0000 0177         }
                 ; 0000 0178        else if(gled7&&gled8&&gled9)
                 _0xF4:
00035c 9bae      	SBIS 0x15,6
00035d c004      	RJMP _0x111
00035e 9baf      	SBIS 0x15,7
00035f c002      	RJMP _0x111
000360 99c6      	SBIC 0x18,6
000361 c001      	RJMP _0x112
                 _0x111:
000362 c00c      	RJMP _0x110
                 _0x112:
                 ; 0000 0179         {
                 ; 0000 017A         p1++;
000363 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 017B         lcd_clear();
                 ; 0000 017C         lcd_puts("Player GREEN Win..!");
                +
000365 eaaa     +LDI R26 , LOW ( _0x54 + ( 74 ) )
000366 e0b2     +LDI R27 , HIGH ( _0x54 + ( 74 ) )
                 	__POINTW2MN _0x54,74
000367 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 017D 
                 ; 0000 017E         delay_ms(300);
                 ; 0000 017F         gled7=0;
000369 940e 0772 	CALL SUBOPT_0xE
                 ; 0000 0180         gled8=0;
                 ; 0000 0181         gled9=0;
                 ; 0000 0182         delay_ms(300);
                 ; 0000 0183         gled7=1;
                 ; 0000 0184         gled8=1;
                 ; 0000 0185         gled9=1;
                 ; 0000 0186         delay_ms(300);
                 ; 0000 0187         gled7=0;
00036b 940e 0772 	CALL SUBOPT_0xE
                 ; 0000 0188         gled8=0;
                 ; 0000 0189         gled9=0;
                 ; 0000 018A         delay_ms(300);
                 ; 0000 018B         gled7=1;
                 ; 0000 018C         gled8=1;
                 ; 0000 018D         gled9=1;
                 ; 0000 018E         delay_ms(300);
                 ; 0000 018F 
                 ; 0000 0190         clear();
00036d de1f      	RCALL _clear
                 ; 0000 0191         break;
00036e c109      	RJMP _0x52
                 ; 0000 0192         }
                 ; 0000 0193        else if(gled1&&gled4&&gled7)
                 _0x110:
00036f 9ba8      	SBIS 0x15,0
000370 c004      	RJMP _0x12D
000371 9bab      	SBIS 0x15,3
000372 c002      	RJMP _0x12D
000373 99ae      	SBIC 0x15,6
000374 c001      	RJMP _0x12E
                 _0x12D:
000375 c00c      	RJMP _0x12C
                 _0x12E:
                 ; 0000 0194         {
                 ; 0000 0195         p1++;
000376 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 0196         lcd_clear();
                 ; 0000 0197         lcd_puts("Player GREEN Win..!");
                +
000378 ebae     +LDI R26 , LOW ( _0x54 + ( 94 ) )
000379 e0b2     +LDI R27 , HIGH ( _0x54 + ( 94 ) )
                 	__POINTW2MN _0x54,94
00037a 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0198 
                 ; 0000 0199         delay_ms(300);
                 ; 0000 019A         gled1=0;
00037c 940e 0780 	CALL SUBOPT_0xF
                 ; 0000 019B         gled4=0;
                 ; 0000 019C         gled7=0;
                 ; 0000 019D         delay_ms(300);
                 ; 0000 019E         gled1=1;
                 ; 0000 019F         gled4=1;
                 ; 0000 01A0         gled7=1;
                 ; 0000 01A1         delay_ms(300);
                 ; 0000 01A2         gled1=0;
00037e 940e 0780 	CALL SUBOPT_0xF
                 ; 0000 01A3         gled4=0;
                 ; 0000 01A4         gled7=0;
                 ; 0000 01A5         delay_ms(300);
                 ; 0000 01A6         gled1=1;
                 ; 0000 01A7         gled4=1;
                 ; 0000 01A8         gled7=1;
                 ; 0000 01A9         delay_ms(300);
                 ; 0000 01AA 
                 ; 0000 01AB         clear();
000380 de0c      	RCALL _clear
                 ; 0000 01AC         break;
000381 c0f6      	RJMP _0x52
                 ; 0000 01AD         }
                 ; 0000 01AE        else if(gled2&&gled5&&gled8)
                 _0x12C:
000382 9ba9      	SBIS 0x15,1
000383 c004      	RJMP _0x149
000384 9bac      	SBIS 0x15,4
000385 c002      	RJMP _0x149
000386 99af      	SBIC 0x15,7
000387 c001      	RJMP _0x14A
                 _0x149:
000388 c00c      	RJMP _0x148
                 _0x14A:
                 ; 0000 01AF         {
                 ; 0000 01B0         p1++;
000389 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 01B1         lcd_clear();
                 ; 0000 01B2         lcd_puts("Player GREEN Win..!");
                +
00038b eda2     +LDI R26 , LOW ( _0x54 + ( 114 ) )
00038c e0b2     +LDI R27 , HIGH ( _0x54 + ( 114 ) )
                 	__POINTW2MN _0x54,114
00038d 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 01B3 
                 ; 0000 01B4         delay_ms(300);
                 ; 0000 01B5         gled2=0;
00038f 940e 078e 	CALL SUBOPT_0x10
                 ; 0000 01B6         gled5=0;
                 ; 0000 01B7         gled8=0;
                 ; 0000 01B8         delay_ms(300);
                 ; 0000 01B9         gled2=1;
                 ; 0000 01BA         gled5=1;
                 ; 0000 01BB         gled8=1;
                 ; 0000 01BC         delay_ms(300);
                 ; 0000 01BD         gled2=0;
000391 940e 078e 	CALL SUBOPT_0x10
                 ; 0000 01BE         gled5=0;
                 ; 0000 01BF         gled8=0;
                 ; 0000 01C0         delay_ms(300);
                 ; 0000 01C1         gled2=1;
                 ; 0000 01C2         gled5=1;
                 ; 0000 01C3         gled8=1;
                 ; 0000 01C4         delay_ms(300);
                 ; 0000 01C5 
                 ; 0000 01C6         clear();
000393 ddf9      	RCALL _clear
                 ; 0000 01C7         break;
000394 c0e3      	RJMP _0x52
                 ; 0000 01C8         }
                 ; 0000 01C9        else if(gled3&&gled6&&gled9)
                 _0x148:
000395 9baa      	SBIS 0x15,2
000396 c004      	RJMP _0x165
000397 9bad      	SBIS 0x15,5
000398 c002      	RJMP _0x165
000399 99c6      	SBIC 0x18,6
00039a c001      	RJMP _0x166
                 _0x165:
00039b c00c      	RJMP _0x164
                 _0x166:
                 ; 0000 01CA         {
                 ; 0000 01CB         p1++;
00039c 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 01CC         lcd_clear();
                 ; 0000 01CD         lcd_puts("Player GREEN Win..!");
                +
00039e eea6     +LDI R26 , LOW ( _0x54 + ( 134 ) )
00039f e0b2     +LDI R27 , HIGH ( _0x54 + ( 134 ) )
                 	__POINTW2MN _0x54,134
0003a0 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 01CE 
                 ; 0000 01CF         delay_ms(300);
                 ; 0000 01D0         gled3=0;
0003a2 940e 079c 	CALL SUBOPT_0x11
                 ; 0000 01D1         gled6=0;
                 ; 0000 01D2         gled9=0;
                 ; 0000 01D3         delay_ms(300);
                 ; 0000 01D4         gled3=1;
                 ; 0000 01D5         gled6=1;
                 ; 0000 01D6         gled9=1;
                 ; 0000 01D7         delay_ms(300);
                 ; 0000 01D8         gled3=0;
0003a4 940e 079c 	CALL SUBOPT_0x11
                 ; 0000 01D9         gled6=0;
                 ; 0000 01DA         gled9=0;
                 ; 0000 01DB         delay_ms(300);
                 ; 0000 01DC         gled3=1;
                 ; 0000 01DD         gled6=1;
                 ; 0000 01DE         gled9=1;
                 ; 0000 01DF         delay_ms(300);
                 ; 0000 01E0 
                 ; 0000 01E1         clear();
0003a6 dde6      	RCALL _clear
                 ; 0000 01E2         break;
0003a7 c0d0      	RJMP _0x52
                 ; 0000 01E3         }
                 ; 0000 01E4         else if(gled1&&gled5&&gled9)
                 _0x164:
0003a8 9ba8      	SBIS 0x15,0
0003a9 c004      	RJMP _0x181
0003aa 9bac      	SBIS 0x15,4
0003ab c002      	RJMP _0x181
0003ac 99c6      	SBIC 0x18,6
0003ad c001      	RJMP _0x182
                 _0x181:
0003ae c00c      	RJMP _0x180
                 _0x182:
                 ; 0000 01E5         {
                 ; 0000 01E6         p1++;
0003af 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 01E7         lcd_clear();
                 ; 0000 01E8         lcd_puts("Player GREEN Win..!");
                +
0003b1 efaa     +LDI R26 , LOW ( _0x54 + ( 154 ) )
0003b2 e0b2     +LDI R27 , HIGH ( _0x54 + ( 154 ) )
                 	__POINTW2MN _0x54,154
0003b3 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 01E9 
                 ; 0000 01EA         delay_ms(300);
                 ; 0000 01EB         gled1=0;
0003b5 940e 07aa 	CALL SUBOPT_0x12
                 ; 0000 01EC         gled5=0;
                 ; 0000 01ED         gled9=0;
                 ; 0000 01EE         delay_ms(300);
                 ; 0000 01EF         gled1=1;
                 ; 0000 01F0         gled5=1;
                 ; 0000 01F1         gled9=1;
                 ; 0000 01F2         delay_ms(300);
                 ; 0000 01F3         gled1=0;
0003b7 940e 07aa 	CALL SUBOPT_0x12
                 ; 0000 01F4         gled5=0;
                 ; 0000 01F5         gled9=0;
                 ; 0000 01F6         delay_ms(300);
                 ; 0000 01F7         gled1=1;
                 ; 0000 01F8         gled5=1;
                 ; 0000 01F9         gled9=1;
                 ; 0000 01FA         delay_ms(300);
                 ; 0000 01FB 
                 ; 0000 01FC         clear();
0003b9 ddd3      	RCALL _clear
                 ; 0000 01FD         break;
0003ba c0bd      	RJMP _0x52
                 ; 0000 01FE         }
                 ; 0000 01FF        else if(gled3&&gled5&&gled7)
                 _0x180:
0003bb 9baa      	SBIS 0x15,2
0003bc c004      	RJMP _0x19D
0003bd 9bac      	SBIS 0x15,4
0003be c002      	RJMP _0x19D
0003bf 99ae      	SBIC 0x15,6
0003c0 c001      	RJMP _0x19E
                 _0x19D:
0003c1 c00c      	RJMP _0x19C
                 _0x19E:
                 ; 0000 0200         {
                 ; 0000 0201         p1++;
0003c2 940e 074c 	CALL SUBOPT_0xA
                 ; 0000 0202         lcd_clear();
                 ; 0000 0203         lcd_puts("Player GREEN Win..!");
                +
0003c4 e0ae     +LDI R26 , LOW ( _0x54 + ( 174 ) )
0003c5 e0b3     +LDI R27 , HIGH ( _0x54 + ( 174 ) )
                 	__POINTW2MN _0x54,174
0003c6 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0204 
                 ; 0000 0205         delay_ms(300);
                 ; 0000 0206         gled3=0;
0003c8 940e 07b8 	CALL SUBOPT_0x13
                 ; 0000 0207         gled5=0;
                 ; 0000 0208         gled7=0;
                 ; 0000 0209         delay_ms(300);
                 ; 0000 020A         gled3=1;
                 ; 0000 020B         gled5=1;
                 ; 0000 020C         gled7=1;
                 ; 0000 020D         delay_ms(300);
                 ; 0000 020E         gled3=0;
0003ca 940e 07b8 	CALL SUBOPT_0x13
                 ; 0000 020F         gled5=0;
                 ; 0000 0210         gled7=0;
                 ; 0000 0211         delay_ms(300);
                 ; 0000 0212         gled3=1;
                 ; 0000 0213         gled5=1;
                 ; 0000 0214         gled7=1;
                 ; 0000 0215         delay_ms(300);
                 ; 0000 0216 
                 ; 0000 0217         clear();
0003cc ddc0      	RCALL _clear
                 ; 0000 0218         break;
0003cd c0aa      	RJMP _0x52
                 ; 0000 0219         }
                 ; 0000 021A        //-------------------------------------------------
                 ; 0000 021B        if(rled1&&rled2&&rled3)
                 _0x19C:
0003ce 9b90      	SBIS 0x12,0
0003cf c004      	RJMP _0x1B8
0003d0 9b91      	SBIS 0x12,1
0003d1 c002      	RJMP _0x1B8
0003d2 9992      	SBIC 0x12,2
0003d3 c001      	RJMP _0x1B9
                 _0x1B8:
0003d4 c00c      	RJMP _0x1B7
                 _0x1B9:
                 ; 0000 021C         {
                 ; 0000 021D         p2++;
0003d5 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 021E         lcd_clear();
                 ; 0000 021F         lcd_puts("Player RED Win..!");
                +
0003d7 e2a2     +LDI R26 , LOW ( _0x54 + ( 194 ) )
0003d8 e0b3     +LDI R27 , HIGH ( _0x54 + ( 194 ) )
                 	__POINTW2MN _0x54,194
0003d9 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222         delay_ms(300);
                 ; 0000 0223         rled1=0;
0003db 940e 07cd 	CALL SUBOPT_0x15
                 ; 0000 0224         rled2=0;
                 ; 0000 0225         rled3=0;
                 ; 0000 0226         delay_ms(300);
                 ; 0000 0227         rled1=1;
                 ; 0000 0228         rled2=1;
                 ; 0000 0229         rled3=1;
                 ; 0000 022A         delay_ms(300);
                 ; 0000 022B         rled1=0;
0003dd 940e 07cd 	CALL SUBOPT_0x15
                 ; 0000 022C         rled2=0;
                 ; 0000 022D         rled3=0;
                 ; 0000 022E         delay_ms(300);
                 ; 0000 022F         rled1=1;
                 ; 0000 0230         rled2=1;
                 ; 0000 0231         rled3=1;
                 ; 0000 0232         delay_ms(300);
                 ; 0000 0233 
                 ; 0000 0234         clear();
0003df ddad      	RCALL _clear
                 ; 0000 0235         break;
0003e0 c097      	RJMP _0x52
                 ; 0000 0236         }
                 ; 0000 0237        else if(rled4&&rled5&&rled6)
                 _0x1B7:
0003e1 9b93      	SBIS 0x12,3
0003e2 c004      	RJMP _0x1D4
0003e3 9b94      	SBIS 0x12,4
0003e4 c002      	RJMP _0x1D4
0003e5 9995      	SBIC 0x12,5
0003e6 c001      	RJMP _0x1D5
                 _0x1D4:
0003e7 c00c      	RJMP _0x1D3
                 _0x1D5:
                 ; 0000 0238         {
                 ; 0000 0239         p2++;
0003e8 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 023A         lcd_clear();
                 ; 0000 023B         lcd_puts("Player RED Win..!");
                +
0003ea e3a4     +LDI R26 , LOW ( _0x54 + ( 212 ) )
0003eb e0b3     +LDI R27 , HIGH ( _0x54 + ( 212 ) )
                 	__POINTW2MN _0x54,212
0003ec 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 023C 
                 ; 0000 023D         delay_ms(300);
                 ; 0000 023E         rled4=0;
0003ee 940e 07db 	CALL SUBOPT_0x16
                 ; 0000 023F         rled5=0;
                 ; 0000 0240         rled6=0;
                 ; 0000 0241         delay_ms(300);
                 ; 0000 0242         rled4=1;
                 ; 0000 0243         rled5=1;
                 ; 0000 0244         rled6=1;
                 ; 0000 0245         delay_ms(300);
                 ; 0000 0246         rled4=0;
0003f0 940e 07db 	CALL SUBOPT_0x16
                 ; 0000 0247         rled5=0;
                 ; 0000 0248         rled6=0;
                 ; 0000 0249         delay_ms(300);
                 ; 0000 024A         rled4=1;
                 ; 0000 024B         rled5=1;
                 ; 0000 024C         rled6=1;
                 ; 0000 024D         delay_ms(300);
                 ; 0000 024E 
                 ; 0000 024F         clear();
0003f2 dd9a      	RCALL _clear
                 ; 0000 0250         break;
0003f3 c084      	RJMP _0x52
                 ; 0000 0251         }
                 ; 0000 0252        else if(rled7&&rled8&&rled9)
                 _0x1D3:
0003f4 9b96      	SBIS 0x12,6
0003f5 c004      	RJMP _0x1F0
0003f6 9b97      	SBIS 0x12,7
0003f7 c002      	RJMP _0x1F0
0003f8 99c7      	SBIC 0x18,7
0003f9 c001      	RJMP _0x1F1
                 _0x1F0:
0003fa c00c      	RJMP _0x1EF
                 _0x1F1:
                 ; 0000 0253         {
                 ; 0000 0254         p2++;
0003fb 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 0255         lcd_clear();
                 ; 0000 0256         lcd_puts("Player RED Win..!");
                +
0003fd e4a6     +LDI R26 , LOW ( _0x54 + ( 230 ) )
0003fe e0b3     +LDI R27 , HIGH ( _0x54 + ( 230 ) )
                 	__POINTW2MN _0x54,230
0003ff 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0257 
                 ; 0000 0258         delay_ms(300);
                 ; 0000 0259         rled7=0;
000401 940e 07e9 	CALL SUBOPT_0x17
                 ; 0000 025A         rled8=0;
                 ; 0000 025B         rled9=0;
                 ; 0000 025C         delay_ms(300);
                 ; 0000 025D         rled7=1;
                 ; 0000 025E         rled8=1;
                 ; 0000 025F         rled9=1;
                 ; 0000 0260         delay_ms(300);
                 ; 0000 0261         rled7=0;
000403 940e 07e9 	CALL SUBOPT_0x17
                 ; 0000 0262         rled8=0;
                 ; 0000 0263         rled9=0;
                 ; 0000 0264         delay_ms(300);
                 ; 0000 0265         rled7=1;
                 ; 0000 0266         rled8=1;
                 ; 0000 0267         rled9=1;
                 ; 0000 0268         delay_ms(300);
                 ; 0000 0269 
                 ; 0000 026A         clear();
000405 dd87      	RCALL _clear
                 ; 0000 026B         break;
000406 c071      	RJMP _0x52
                 ; 0000 026C         }
                 ; 0000 026D        else if(rled1&&rled4&&rled7)
                 _0x1EF:
000407 9b90      	SBIS 0x12,0
000408 c004      	RJMP _0x20C
000409 9b93      	SBIS 0x12,3
00040a c002      	RJMP _0x20C
00040b 9996      	SBIC 0x12,6
00040c c001      	RJMP _0x20D
                 _0x20C:
00040d c00c      	RJMP _0x20B
                 _0x20D:
                 ; 0000 026E         {
                 ; 0000 026F         p2++;
00040e 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 0270         lcd_clear();
                 ; 0000 0271         lcd_puts("Player RED Win..!");
                +
000410 e5a8     +LDI R26 , LOW ( _0x54 + ( 248 ) )
000411 e0b3     +LDI R27 , HIGH ( _0x54 + ( 248 ) )
                 	__POINTW2MN _0x54,248
000412 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 0272 
                 ; 0000 0273         delay_ms(300);
                 ; 0000 0274         rled1=0;
000414 940e 07f7 	CALL SUBOPT_0x18
                 ; 0000 0275         rled4=0;
                 ; 0000 0276         rled7=0;
                 ; 0000 0277         delay_ms(300);
                 ; 0000 0278         rled1=1;
                 ; 0000 0279         rled4=1;
                 ; 0000 027A         rled7=1;
                 ; 0000 027B         delay_ms(300);
                 ; 0000 027C         rled1=0;
000416 940e 07f7 	CALL SUBOPT_0x18
                 ; 0000 027D         rled4=0;
                 ; 0000 027E         rled7=0;
                 ; 0000 027F         delay_ms(300);
                 ; 0000 0280         rled1=1;
                 ; 0000 0281         rled4=1;
                 ; 0000 0282         rled7=1;
                 ; 0000 0283         delay_ms(300);
                 ; 0000 0284 
                 ; 0000 0285         clear();
000418 dd74      	RCALL _clear
                 ; 0000 0286         break;
000419 c05e      	RJMP _0x52
                 ; 0000 0287         }
                 ; 0000 0288        else if(rled2&&rled5&&rled8)
                 _0x20B:
00041a 9b91      	SBIS 0x12,1
00041b c004      	RJMP _0x228
00041c 9b94      	SBIS 0x12,4
00041d c002      	RJMP _0x228
00041e 9997      	SBIC 0x12,7
00041f c001      	RJMP _0x229
                 _0x228:
000420 c00c      	RJMP _0x227
                 _0x229:
                 ; 0000 0289         {
                 ; 0000 028A         p2++;
000421 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 028B         lcd_clear();
                 ; 0000 028C         lcd_puts("Player RED Win..!");
                +
000423 e6aa     +LDI R26 , LOW ( _0x54 + ( 266 ) )
000424 e0b3     +LDI R27 , HIGH ( _0x54 + ( 266 ) )
                 	__POINTW2MN _0x54,266
000425 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 028D 
                 ; 0000 028E         delay_ms(300);
                 ; 0000 028F         rled2=0;
000427 940e 0805 	CALL SUBOPT_0x19
                 ; 0000 0290         rled5=0;
                 ; 0000 0291         rled8=0;
                 ; 0000 0292         delay_ms(300);
                 ; 0000 0293         rled2=1;
                 ; 0000 0294         rled5=1;
                 ; 0000 0295         rled8=1;
                 ; 0000 0296         delay_ms(300);
                 ; 0000 0297         rled2=0;
000429 940e 0805 	CALL SUBOPT_0x19
                 ; 0000 0298         rled5=0;
                 ; 0000 0299         rled8=0;
                 ; 0000 029A         delay_ms(300);
                 ; 0000 029B         rled2=1;
                 ; 0000 029C         rled5=1;
                 ; 0000 029D         rled8=1;
                 ; 0000 029E         delay_ms(300);
                 ; 0000 029F 
                 ; 0000 02A0         clear();
00042b dd61      	RCALL _clear
                 ; 0000 02A1         break;
00042c c04b      	RJMP _0x52
                 ; 0000 02A2         }
                 ; 0000 02A3        else if(rled3&&rled6&&rled9)
                 _0x227:
00042d 9b92      	SBIS 0x12,2
00042e c004      	RJMP _0x244
00042f 9b95      	SBIS 0x12,5
000430 c002      	RJMP _0x244
000431 99c7      	SBIC 0x18,7
000432 c001      	RJMP _0x245
                 _0x244:
000433 c00c      	RJMP _0x243
                 _0x245:
                 ; 0000 02A4         {
                 ; 0000 02A5         p2++;
000434 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02A6         lcd_clear();
                 ; 0000 02A7         lcd_puts("Player RED Win..!");
                +
000436 e7ac     +LDI R26 , LOW ( _0x54 + ( 284 ) )
000437 e0b3     +LDI R27 , HIGH ( _0x54 + ( 284 ) )
                 	__POINTW2MN _0x54,284
000438 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 02A8 
                 ; 0000 02A9         delay_ms(300);
                 ; 0000 02AA         rled3=0;
00043a 940e 0813 	CALL SUBOPT_0x1A
                 ; 0000 02AB         rled6=0;
                 ; 0000 02AC         rled9=0;
                 ; 0000 02AD         delay_ms(300);
                 ; 0000 02AE         rled3=1;
                 ; 0000 02AF         rled6=1;
                 ; 0000 02B0         rled9=1;
                 ; 0000 02B1         delay_ms(300);
                 ; 0000 02B2         rled3=0;
00043c 940e 0813 	CALL SUBOPT_0x1A
                 ; 0000 02B3         rled6=0;
                 ; 0000 02B4         rled9=0;
                 ; 0000 02B5         delay_ms(300);
                 ; 0000 02B6         rled3=1;
                 ; 0000 02B7         rled6=1;
                 ; 0000 02B8         rled9=1;
                 ; 0000 02B9         delay_ms(300);
                 ; 0000 02BA 
                 ; 0000 02BB         clear();
00043e dd4e      	RCALL _clear
                 ; 0000 02BC         break;
00043f c038      	RJMP _0x52
                 ; 0000 02BD         }
                 ; 0000 02BE        else if(rled1&&rled5&&rled9)
                 _0x243:
000440 9b90      	SBIS 0x12,0
000441 c004      	RJMP _0x260
000442 9b94      	SBIS 0x12,4
000443 c002      	RJMP _0x260
000444 99c7      	SBIC 0x18,7
000445 c001      	RJMP _0x261
                 _0x260:
000446 c00c      	RJMP _0x25F
                 _0x261:
                 ; 0000 02BF         {
                 ; 0000 02C0         p2++;
000447 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02C1         lcd_clear();
                 ; 0000 02C2         lcd_puts("Player RED Win..!");
                +
000449 e8ae     +LDI R26 , LOW ( _0x54 + ( 302 ) )
00044a e0b3     +LDI R27 , HIGH ( _0x54 + ( 302 ) )
                 	__POINTW2MN _0x54,302
00044b 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 02C3 
                 ; 0000 02C4         delay_ms(300);
                 ; 0000 02C5         rled1=0;
00044d 940e 0821 	CALL SUBOPT_0x1B
                 ; 0000 02C6         rled5=0;
                 ; 0000 02C7         rled9=0;
                 ; 0000 02C8         delay_ms(300);
                 ; 0000 02C9         rled1=1;
                 ; 0000 02CA         rled5=1;
                 ; 0000 02CB         rled9=1;
                 ; 0000 02CC         delay_ms(300);
                 ; 0000 02CD         rled1=0;
00044f 940e 0821 	CALL SUBOPT_0x1B
                 ; 0000 02CE         rled5=0;
                 ; 0000 02CF         rled9=0;
                 ; 0000 02D0         delay_ms(300);
                 ; 0000 02D1         rled1=1;
                 ; 0000 02D2         rled5=1;
                 ; 0000 02D3         rled9=1;
                 ; 0000 02D4         delay_ms(300);
                 ; 0000 02D5 
                 ; 0000 02D6         clear();
000451 dd3b      	RCALL _clear
                 ; 0000 02D7         break;
000452 c025      	RJMP _0x52
                 ; 0000 02D8         }
                 ; 0000 02D9        else if(rled7&&rled5&&rled3)
                 _0x25F:
000453 9b96      	SBIS 0x12,6
000454 c004      	RJMP _0x27C
000455 9b94      	SBIS 0x12,4
000456 c002      	RJMP _0x27C
000457 9992      	SBIC 0x12,2
000458 c001      	RJMP _0x27D
                 _0x27C:
000459 c00c      	RJMP _0x27B
                 _0x27D:
                 ; 0000 02DA         {
                 ; 0000 02DB         p2++;
00045a 940e 07c6 	CALL SUBOPT_0x14
                 ; 0000 02DC         lcd_clear();
                 ; 0000 02DD         lcd_puts("Player RED Win..!");
                +
00045c eaa0     +LDI R26 , LOW ( _0x54 + ( 320 ) )
00045d e0b3     +LDI R27 , HIGH ( _0x54 + ( 320 ) )
                 	__POINTW2MN _0x54,320
00045e 940e 0750 	CALL SUBOPT_0xB
                 ; 0000 02DE 
                 ; 0000 02DF         delay_ms(300);
                 ; 0000 02E0         rled7=0;
000460 940e 082f 	CALL SUBOPT_0x1C
                 ; 0000 02E1         rled5=0;
                 ; 0000 02E2         rled3=0;
                 ; 0000 02E3         delay_ms(300);
                 ; 0000 02E4         rled7=1;
                 ; 0000 02E5         rled5=1;
                 ; 0000 02E6         rled3=1;
                 ; 0000 02E7         delay_ms(300);
                 ; 0000 02E8         rled7=0;
000462 940e 082f 	CALL SUBOPT_0x1C
                 ; 0000 02E9         rled5=0;
                 ; 0000 02EA         rled3=0;
                 ; 0000 02EB         delay_ms(300);
                 ; 0000 02EC         rled7=1;
                 ; 0000 02ED         rled5=1;
                 ; 0000 02EE         rled3=1;
                 ; 0000 02EF         delay_ms(300);
                 ; 0000 02F0 
                 ; 0000 02F1         clear();
000464 dd28      	RCALL _clear
                 ; 0000 02F2         break;
000465 c012      	RJMP _0x52
                 ; 0000 02F3         }
                 ; 0000 02F4 
                 ; 0000 02F5        //-------------------------------------------------
                 ; 0000 02F6 
                 ; 0000 02F7        player=~player;
                 _0x27B:
000466 e0e1      	LDI  R30,LOW(1)
000467 262e      	EOR  R2,R30
                 ; 0000 02F8        if(c==9)
000468 e0e9      	LDI  R30,LOW(9)
000469 e0f0      	LDI  R31,HIGH(9)
00046a 15e4      	CP   R30,R4
00046b 05f5      	CPC  R31,R5
00046c f451      	BRNE _0x296
                 ; 0000 02F9         {
                 ; 0000 02FA         delay_ms(1000);
00046d eea8      	LDI  R26,LOW(1000)
00046e e0b3      	LDI  R27,HIGH(1000)
00046f 940e 0877 	CALL _delay_ms
                 ; 0000 02FB         lcd_gotoxy(0,1);
000471 940e 0738 	CALL SUBOPT_0x7
                 ; 0000 02FC         lcd_puts("Reseting...");
                +
000473 eba2     +LDI R26 , LOW ( _0x54 + ( 338 ) )
000474 e0b3     +LDI R27 , HIGH ( _0x54 + ( 338 ) )
                 	__POINTW2MN _0x54,338
000475 d07b      	RCALL _lcd_puts
                 ; 0000 02FD         clear();
000476 dd16      	RCALL _clear
                 ; 0000 02FE         }
                 ; 0000 02FF        }
                 _0x296:
                 ; 0000 0300 
                 ; 0000 0301       }
                 _0x5A:
000477 cd91      	RJMP _0x50
                 _0x52:
                 ; 0000 0302  player=~player;
000478 e0e1      	LDI  R30,LOW(1)
000479 262e      	EOR  R2,R30
                 ; 0000 0303  }
                +
00047a 5f2f     +SUBI R18 , LOW ( - 1 )
00047b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00047c cd6b      	RJMP _0x4E
                 _0x4F:
                 ; 0000 0304 
                 ; 0000 0305 lcd_clear();
00047d 940e 0723 	CALL SUBOPT_0x4
                 ; 0000 0306 sprintf(lcd_b,"Player GREEN: %d", p1);
                +
00047f efe8     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
000480 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
                 	__POINTW1FN _0x0,106
000481 93fa      	ST   -Y,R31
000482 93ea      	ST   -Y,R30
000483 01fa      	MOVW R30,R20
000484 940e 072a 	CALL SUBOPT_0x5
000486 e084      	LDI  R24,4
000487 940e 06a4 	CALL _sprintf
000489 9628      	ADIW R28,8
                 ; 0000 0307 lcd_gotoxy(0,0);
00048a 940e 072f 	CALL SUBOPT_0x6
                 ; 0000 0308 lcd_puts(lcd_b);
                 ; 0000 0309 sprintf(lcd_b, "Player RED: %d", p2);
00048c 01fe      	MOVW R30,R28
00048d 9632      	ADIW R30,2
00048e 93fa      	ST   -Y,R31
00048f 93ea      	ST   -Y,R30
                +
000490 e0e9     +LDI R30 , LOW ( 2 * _0x0 + ( 123 ) )
000491 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 123 ) )
                 	__POINTW1FN _0x0,123
000492 93fa      	ST   -Y,R31
000493 93ea      	ST   -Y,R30
000494 a1ee      	LDD  R30,Y+38
000495 a1ff      	LDD  R31,Y+38+1
000496 940e 072a 	CALL SUBOPT_0x5
000498 e084      	LDI  R24,4
000499 940e 06a4 	CALL _sprintf
00049b 9628      	ADIW R28,8
                 ; 0000 030A lcd_gotoxy(0,1);
00049c 940e 0738 	CALL SUBOPT_0x7
                 ; 0000 030B lcd_puts(lcd_b);
00049e 01de      	MOVW R26,R28
00049f 9612      	ADIW R26,2
0004a0 d050      	RCALL _lcd_puts
                 ; 0000 030C 
                 ; 0000 030D }
0004a1 96a4      	ADIW R28,36
                 _0x297:
0004a2 cfff      	RJMP _0x297
                 ; .FEND
                 
                 	.DSEG
                 _0x54:
000260           	.BYTE 0x15E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0004a3 93aa      	ST   -Y,R26
0004a4 b3eb      	IN   R30,0x1B
0004a5 70ef      	ANDI R30,LOW(0xF)
0004a6 2fae      	MOV  R26,R30
0004a7 81e8      	LD   R30,Y
0004a8 7fe0      	ANDI R30,LOW(0xF0)
0004a9 2bea      	OR   R30,R26
0004aa bbeb      	OUT  0x1B,R30
                +
0004ab e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004ac 958a     +DEC R24
0004ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004ae 9ada      	SBI  0x1B,2
                +
0004af e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004b0 958a     +DEC R24
0004b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004b2 98da      	CBI  0x1B,2
                +
0004b3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0004b4 958a     +DEC R24
0004b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0004b6 c077      	RJMP _0x20C0002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0004b7 93aa      	ST   -Y,R26
0004b8 81a8      	LD   R26,Y
0004b9 dfe9      	RCALL __lcd_write_nibble_G100
0004ba 81e8          ld    r30,y
0004bb 95e2          swap  r30
0004bc 83e8          st    y,r30
0004bd 81a8      	LD   R26,Y
0004be dfe4      	RCALL __lcd_write_nibble_G100
                +
0004bf e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0004c0 958a     +DEC R24
0004c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0004c2 c06b      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004c3 93aa      	ST   -Y,R26
0004c4 81e8      	LD   R30,Y
0004c5 e0f0      	LDI  R31,0
0004c6 53e0      	SUBI R30,LOW(-__base_y_G100)
0004c7 4ffc      	SBCI R31,HIGH(-__base_y_G100)
0004c8 81e0      	LD   R30,Z
0004c9 81a9      	LDD  R26,Y+1
0004ca 0fae      	ADD  R26,R30
0004cb dfeb      	RCALL __lcd_write_data
0004cc 8079      	LDD  R7,Y+1
0004cd 8068      	LDD  R6,Y+0
0004ce 9622      	ADIW R28,2
0004cf 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0004d0 e0a2      	LDI  R26,LOW(2)
0004d1 940e 083d 	CALL SUBOPT_0x1D
0004d3 e0ac      	LDI  R26,LOW(12)
0004d4 dfe2      	RCALL __lcd_write_data
0004d5 e0a1      	LDI  R26,LOW(1)
0004d6 940e 083d 	CALL SUBOPT_0x1D
0004d8 e0e0      	LDI  R30,LOW(0)
0004d9 2e6e      	MOV  R6,R30
0004da 2e7e      	MOV  R7,R30
0004db 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0004dc 93aa      	ST   -Y,R26
0004dd 81a8      	LD   R26,Y
0004de 30aa      	CPI  R26,LOW(0xA)
0004df f011      	BREQ _0x2000005
0004e0 1479      	CP   R7,R9
0004e1 f048      	BRLO _0x2000004
                 _0x2000005:
0004e2 e0e0      	LDI  R30,LOW(0)
0004e3 93ea      	ST   -Y,R30
0004e4 9463      	INC  R6
0004e5 2da6      	MOV  R26,R6
0004e6 dfdc      	RCALL _lcd_gotoxy
0004e7 81a8      	LD   R26,Y
0004e8 30aa      	CPI  R26,LOW(0xA)
0004e9 f409      	BRNE _0x2000007
0004ea c043      	RJMP _0x20C0002
                 _0x2000007:
                 _0x2000004:
0004eb 9473      	INC  R7
0004ec 9ad8      	SBI  0x1B,0
0004ed 81a8      	LD   R26,Y
0004ee dfc8      	RCALL __lcd_write_data
0004ef 98d8      	CBI  0x1B,0
0004f0 c03d      	RJMP _0x20C0002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0004f1 93ba      	ST   -Y,R27
0004f2 93aa      	ST   -Y,R26
0004f3 931a      	ST   -Y,R17
                 _0x2000008:
0004f4 81a9      	LDD  R26,Y+1
0004f5 81ba      	LDD  R27,Y+1+1
0004f6 91ed      	LD   R30,X+
0004f7 83a9      	STD  Y+1,R26
0004f8 83ba      	STD  Y+1+1,R27
0004f9 2f1e      	MOV  R17,R30
0004fa 30e0      	CPI  R30,0
0004fb f019      	BREQ _0x200000A
0004fc 2fa1      	MOV  R26,R17
0004fd dfde      	RCALL _lcd_putchar
0004fe cff5      	RJMP _0x2000008
                 _0x200000A:
0004ff 8118      	LDD  R17,Y+0
000500 9623      	ADIW R28,3
000501 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000502 93aa      	ST   -Y,R26
000503 b3ea      	IN   R30,0x1A
000504 6fe0      	ORI  R30,LOW(0xF0)
000505 bbea      	OUT  0x1A,R30
000506 9ad2      	SBI  0x1A,2
000507 9ad0      	SBI  0x1A,0
000508 9ad1      	SBI  0x1A,1
000509 98da      	CBI  0x1B,2
00050a 98d8      	CBI  0x1B,0
00050b 98d9      	CBI  0x1B,1
00050c 8098      	LDD  R9,Y+0
00050d 81e8      	LD   R30,Y
00050e 58e0      	SUBI R30,-LOW(128)
                +
00050f 93e0 03d2+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000511 81e8      	LD   R30,Y
000512 54e0      	SUBI R30,-LOW(192)
                +
000513 93e0 03d3+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000515 e1a4      	LDI  R26,LOW(20)
000516 e0b0      	LDI  R27,0
000517 940e 0877 	CALL _delay_ms
000519 940e 0843 	CALL SUBOPT_0x1E
00051b 940e 0843 	CALL SUBOPT_0x1E
00051d 940e 0843 	CALL SUBOPT_0x1E
00051f e2a0      	LDI  R26,LOW(32)
000520 df82      	RCALL __lcd_write_nibble_G100
                +
000521 ec88     +LDI R24 , LOW ( 200 )
000522 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000523 9701     +SBIW R24 , 1
000524 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000525 e2a8      	LDI  R26,LOW(40)
000526 df90      	RCALL __lcd_write_data
000527 e0a4      	LDI  R26,LOW(4)
000528 df8e      	RCALL __lcd_write_data
000529 e8a5      	LDI  R26,LOW(133)
00052a df8c      	RCALL __lcd_write_data
00052b e0a6      	LDI  R26,LOW(6)
00052c df8a      	RCALL __lcd_write_data
00052d dfa2      	RCALL _lcd_clear
                 _0x20C0002:
00052e 9621      	ADIW R28,1
00052f 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000530 93ba      	ST   -Y,R27
000531 93aa      	ST   -Y,R26
000532 931a      	ST   -Y,R17
000533 930a      	ST   -Y,R16
000534 81aa      	LDD  R26,Y+2
000535 81bb      	LDD  R27,Y+2+1
000536 9612      	ADIW R26,2
000537 940e 08cf 	CALL __GETW1P
000539 9730      	SBIW R30,0
00053a f159      	BREQ _0x2020010
00053b 81aa      	LDD  R26,Y+2
00053c 81bb      	LDD  R27,Y+2+1
00053d 9614      	ADIW R26,4
00053e 940e 08cf 	CALL __GETW1P
000540 018f      	MOVW R16,R30
000541 9730      	SBIW R30,0
000542 f061      	BREQ _0x2020012
                +
000543 3002     +CPI R16 , LOW ( 2 )
000544 e0e0     +LDI R30 , HIGH ( 2 )
000545 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000546 f098      	BRLO _0x2020013
000547 01f8      	MOVW R30,R16
000548 9731      	SBIW R30,1
000549 018f      	MOVW R16,R30
                +
00054a 81aa     +LDD R26 , Y + 2
00054b 81bb     +LDD R27 , Y + 2 + 1
00054c 9614     +ADIW R26 , 4
00054d 93ed     +ST X + , R30
00054e 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00054f 81aa      	LDD  R26,Y+2
000550 81bb      	LDD  R27,Y+2+1
000551 9612      	ADIW R26,2
000552 91ed      	LD   R30,X+
000553 91fd      	LD   R31,X+
000554 9631      	ADIW R30,1
000555 93fe      	ST   -X,R31
000556 93ee      	ST   -X,R30
000557 9731      	SBIW R30,1
000558 81ac      	LDD  R26,Y+4
000559 83a0      	STD  Z+0,R26
                 _0x2020013:
00055a 81aa      	LDD  R26,Y+2
00055b 81bb      	LDD  R27,Y+2+1
00055c 940e 08cf 	CALL __GETW1P
00055e 23ff      	TST  R31
00055f f02a      	BRMI _0x2020014
000560 91ed      	LD   R30,X+
000561 91fd      	LD   R31,X+
000562 9631      	ADIW R30,1
000563 93fe      	ST   -X,R31
000564 93ee      	ST   -X,R30
                 _0x2020014:
000565 c006      	RJMP _0x2020015
                 _0x2020010:
000566 81aa      	LDD  R26,Y+2
000567 81bb      	LDD  R27,Y+2+1
000568 efef      	LDI  R30,LOW(65535)
000569 efff      	LDI  R31,HIGH(65535)
00056a 93ed      	ST   X+,R30
00056b 93fc      	ST   X,R31
                 _0x2020015:
00056c 8119      	LDD  R17,Y+1
00056d 8108      	LDD  R16,Y+0
00056e 9625      	ADIW R28,5
00056f 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000570 93ba      	ST   -Y,R27
000571 93aa      	ST   -Y,R26
000572 9726      	SBIW R28,6
000573 940e 08dc 	CALL __SAVELOCR6
000575 e010      	LDI  R17,0
000576 85ac      	LDD  R26,Y+12
000577 85bd      	LDD  R27,Y+12+1
000578 e0e0      	LDI  R30,LOW(0)
000579 e0f0      	LDI  R31,HIGH(0)
00057a 93ed      	ST   X+,R30
00057b 93fc      	ST   X,R31
                 _0x2020016:
00057c 89ea      	LDD  R30,Y+18
00057d 89fb      	LDD  R31,Y+18+1
00057e 9631      	ADIW R30,1
00057f 8bea      	STD  Y+18,R30
000580 8bfb      	STD  Y+18+1,R31
000581 9731      	SBIW R30,1
000582 91e4      	LPM  R30,Z
000583 2f2e      	MOV  R18,R30
000584 30e0      	CPI  R30,0
000585 f409      	BRNE PC+2
000586 c115      	RJMP _0x2020018
000587 2fe1      	MOV  R30,R17
000588 30e0      	CPI  R30,0
000589 f439      	BRNE _0x202001C
00058a 3225      	CPI  R18,37
00058b f411      	BRNE _0x202001D
00058c e011      	LDI  R17,LOW(1)
00058d c002      	RJMP _0x202001E
                 _0x202001D:
00058e 940e 084b 	CALL SUBOPT_0x1F
                 _0x202001E:
000590 c10a      	RJMP _0x202001B
                 _0x202001C:
000591 30e1      	CPI  R30,LOW(0x1)
000592 f4a9      	BRNE _0x202001F
000593 3225      	CPI  R18,37
000594 f419      	BRNE _0x2020020
000595 940e 084b 	CALL SUBOPT_0x1F
000597 c102      	RJMP _0x20200CC
                 _0x2020020:
000598 e012      	LDI  R17,LOW(2)
000599 e040      	LDI  R20,LOW(0)
00059a e000      	LDI  R16,LOW(0)
00059b 322d      	CPI  R18,45
00059c f411      	BRNE _0x2020021
00059d e001      	LDI  R16,LOW(1)
00059e c0fc      	RJMP _0x202001B
                 _0x2020021:
00059f 322b      	CPI  R18,43
0005a0 f411      	BRNE _0x2020022
0005a1 e24b      	LDI  R20,LOW(43)
0005a2 c0f8      	RJMP _0x202001B
                 _0x2020022:
0005a3 3220      	CPI  R18,32
0005a4 f411      	BRNE _0x2020023
0005a5 e240      	LDI  R20,LOW(32)
0005a6 c0f4      	RJMP _0x202001B
                 _0x2020023:
0005a7 c002      	RJMP _0x2020024
                 _0x202001F:
0005a8 30e2      	CPI  R30,LOW(0x2)
0005a9 f439      	BRNE _0x2020025
                 _0x2020024:
0005aa e050      	LDI  R21,LOW(0)
0005ab e013      	LDI  R17,LOW(3)
0005ac 3320      	CPI  R18,48
0005ad f411      	BRNE _0x2020026
0005ae 6800      	ORI  R16,LOW(128)
0005af c0eb      	RJMP _0x202001B
                 _0x2020026:
0005b0 c003      	RJMP _0x2020027
                 _0x2020025:
0005b1 30e3      	CPI  R30,LOW(0x3)
0005b2 f009      	BREQ PC+2
0005b3 c0e7      	RJMP _0x202001B
                 _0x2020027:
0005b4 3320      	CPI  R18,48
0005b5 f010      	BRLO _0x202002A
0005b6 332a      	CPI  R18,58
0005b7 f008      	BRLO _0x202002B
                 _0x202002A:
0005b8 c007      	RJMP _0x2020029
                 _0x202002B:
0005b9 e0aa      	LDI  R26,LOW(10)
0005ba 9f5a      	MUL  R21,R26
0005bb 2d50      	MOV  R21,R0
0005bc 2fe2      	MOV  R30,R18
0005bd 53e0      	SUBI R30,LOW(48)
0005be 0f5e      	ADD  R21,R30
0005bf c0db      	RJMP _0x202001B
                 _0x2020029:
0005c0 2fe2      	MOV  R30,R18
0005c1 36e3      	CPI  R30,LOW(0x63)
0005c2 f449      	BRNE _0x202002F
0005c3 940e 0852 	CALL SUBOPT_0x20
0005c5 89e8      	LDD  R30,Y+16
0005c6 89f9      	LDD  R31,Y+16+1
0005c7 81a4      	LDD  R26,Z+4
0005c8 93aa      	ST   -Y,R26
0005c9 940e 0858 	CALL SUBOPT_0x21
0005cb c0ce      	RJMP _0x2020030
                 _0x202002F:
0005cc 37e3      	CPI  R30,LOW(0x73)
0005cd f441      	BRNE _0x2020032
0005ce 940e 0852 	CALL SUBOPT_0x20
0005d0 940e 085e 	CALL SUBOPT_0x22
0005d2 940e 06f5 	CALL _strlen
0005d4 2f1e      	MOV  R17,R30
0005d5 c00a      	RJMP _0x2020033
                 _0x2020032:
0005d6 37e0      	CPI  R30,LOW(0x70)
0005d7 f461      	BRNE _0x2020035
0005d8 940e 0852 	CALL SUBOPT_0x20
0005da 940e 085e 	CALL SUBOPT_0x22
0005dc 940e 0701 	CALL _strlenf
0005de 2f1e      	MOV  R17,R30
0005df 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0005e0 6002      	ORI  R16,LOW(2)
0005e1 770f      	ANDI R16,LOW(127)
0005e2 e030      	LDI  R19,LOW(0)
0005e3 c034      	RJMP _0x2020036
                 _0x2020035:
0005e4 36e4      	CPI  R30,LOW(0x64)
0005e5 f011      	BREQ _0x2020039
0005e6 36e9      	CPI  R30,LOW(0x69)
0005e7 f411      	BRNE _0x202003A
                 _0x2020039:
0005e8 6004      	ORI  R16,LOW(4)
0005e9 c002      	RJMP _0x202003B
                 _0x202003A:
0005ea 37e5      	CPI  R30,LOW(0x75)
0005eb f431      	BRNE _0x202003C
                 _0x202003B:
0005ec e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0005ed e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0005ee 83ee      	STD  Y+6,R30
0005ef 83ff      	STD  Y+6+1,R31
0005f0 e015      	LDI  R17,LOW(5)
0005f1 c00c      	RJMP _0x202003D
                 _0x202003C:
0005f2 35e8      	CPI  R30,LOW(0x58)
0005f3 f411      	BRNE _0x202003F
0005f4 6008      	ORI  R16,LOW(8)
0005f5 c003      	RJMP _0x2020040
                 _0x202003F:
0005f6 37e8      	CPI  R30,LOW(0x78)
0005f7 f009      	BREQ PC+2
0005f8 c0a1      	RJMP _0x2020071
                 _0x2020040:
0005f9 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0005fa e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0005fb 83ee      	STD  Y+6,R30
0005fc 83ff      	STD  Y+6+1,R31
0005fd e014      	LDI  R17,LOW(4)
                 _0x202003D:
0005fe ff02      	SBRS R16,2
0005ff c014      	RJMP _0x2020042
000600 940e 0852 	CALL SUBOPT_0x20
000602 940e 0868 	CALL SUBOPT_0x23
000604 85ab      	LDD  R26,Y+11
000605 23aa      	TST  R26
000606 f43a      	BRPL _0x2020043
000607 85ea      	LDD  R30,Y+10
000608 85fb      	LDD  R31,Y+10+1
000609 940e 0885 	CALL __ANEGW1
00060b 87ea      	STD  Y+10,R30
00060c 87fb      	STD  Y+10+1,R31
00060d e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00060e 3040      	CPI  R20,0
00060f f011      	BREQ _0x2020044
000610 5f1f      	SUBI R17,-LOW(1)
000611 c001      	RJMP _0x2020045
                 _0x2020044:
000612 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000613 c004      	RJMP _0x2020046
                 _0x2020042:
000614 940e 0852 	CALL SUBOPT_0x20
000616 940e 0868 	CALL SUBOPT_0x23
                 _0x2020046:
                 _0x2020036:
000618 fd00      	SBRC R16,0
000619 c011      	RJMP _0x2020047
                 _0x2020048:
00061a 1715      	CP   R17,R21
00061b f478      	BRSH _0x202004A
00061c ff07      	SBRS R16,7
00061d c008      	RJMP _0x202004B
00061e ff02      	SBRS R16,2
00061f c004      	RJMP _0x202004C
000620 7f0b      	ANDI R16,LOW(251)
000621 2f24      	MOV  R18,R20
000622 5011      	SUBI R17,LOW(1)
000623 c001      	RJMP _0x202004D
                 _0x202004C:
000624 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000625 c001      	RJMP _0x202004E
                 _0x202004B:
000626 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000627 940e 084b 	CALL SUBOPT_0x1F
000629 5051      	SUBI R21,LOW(1)
00062a cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00062b 2f31      	MOV  R19,R17
00062c ff01      	SBRS R16,1
00062d c017      	RJMP _0x202004F
                 _0x2020050:
00062e 3030      	CPI  R19,0
00062f f0a1      	BREQ _0x2020052
000630 ff03      	SBRS R16,3
000631 c006      	RJMP _0x2020053
000632 81ee      	LDD  R30,Y+6
000633 81ff      	LDD  R31,Y+6+1
000634 9125      	LPM  R18,Z+
000635 83ee      	STD  Y+6,R30
000636 83ff      	STD  Y+6+1,R31
000637 c005      	RJMP _0x2020054
                 _0x2020053:
000638 81ae      	LDD  R26,Y+6
000639 81bf      	LDD  R27,Y+6+1
00063a 912d      	LD   R18,X+
00063b 83ae      	STD  Y+6,R26
00063c 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00063d 940e 084b 	CALL SUBOPT_0x1F
00063f 3050      	CPI  R21,0
000640 f009      	BREQ _0x2020055
000641 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000642 5031      	SUBI R19,LOW(1)
000643 cfea      	RJMP _0x2020050
                 _0x2020052:
000644 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000645 e320      	LDI  R18,LOW(48)
000646 81ee      	LDD  R30,Y+6
000647 81ff      	LDD  R31,Y+6+1
000648 940e 08d3 	CALL __GETW1PF
00064a 87e8      	STD  Y+8,R30
00064b 87f9      	STD  Y+8+1,R31
00064c 81ee      	LDD  R30,Y+6
00064d 81ff      	LDD  R31,Y+6+1
00064e 9632      	ADIW R30,2
00064f 83ee      	STD  Y+6,R30
000650 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000651 85e8      	LDD  R30,Y+8
000652 85f9      	LDD  R31,Y+8+1
000653 85aa      	LDD  R26,Y+10
000654 85bb      	LDD  R27,Y+10+1
000655 17ae      	CP   R26,R30
000656 07bf      	CPC  R27,R31
000657 f050      	BRLO _0x202005C
000658 5f2f      	SUBI R18,-LOW(1)
000659 85a8      	LDD  R26,Y+8
00065a 85b9      	LDD  R27,Y+8+1
00065b 85ea      	LDD  R30,Y+10
00065c 85fb      	LDD  R31,Y+10+1
00065d 1bea      	SUB  R30,R26
00065e 0bfb      	SBC  R31,R27
00065f 87ea      	STD  Y+10,R30
000660 87fb      	STD  Y+10+1,R31
000661 cfef      	RJMP _0x202005A
                 _0x202005C:
000662 332a      	CPI  R18,58
000663 f028      	BRLO _0x202005D
000664 ff03      	SBRS R16,3
000665 c002      	RJMP _0x202005E
000666 5f29      	SUBI R18,-LOW(7)
000667 c001      	RJMP _0x202005F
                 _0x202005E:
000668 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000669 fd04      	SBRC R16,4
00066a c01a      	RJMP _0x2020061
00066b 3321      	CPI  R18,49
00066c f420      	BRSH _0x2020063
00066d 85a8      	LDD  R26,Y+8
00066e 85b9      	LDD  R27,Y+8+1
00066f 9711      	SBIW R26,1
000670 f409      	BRNE _0x2020062
                 _0x2020063:
000671 c009      	RJMP _0x20200CD
                 _0x2020062:
000672 1753      	CP   R21,R19
000673 f010      	BRLO _0x2020067
000674 ff00      	SBRS R16,0
000675 c001      	RJMP _0x2020068
                 _0x2020067:
000676 c013      	RJMP _0x2020066
                 _0x2020068:
000677 e220      	LDI  R18,LOW(32)
000678 ff07      	SBRS R16,7
000679 c00b      	RJMP _0x2020069
00067a e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00067b 6100      	ORI  R16,LOW(16)
00067c ff02      	SBRS R16,2
00067d c007      	RJMP _0x202006A
00067e 7f0b      	ANDI R16,LOW(251)
00067f 934a      	ST   -Y,R20
000680 940e 0858 	CALL SUBOPT_0x21
000682 3050      	CPI  R21,0
000683 f009      	BREQ _0x202006B
000684 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000685 940e 084b 	CALL SUBOPT_0x1F
000687 3050      	CPI  R21,0
000688 f009      	BREQ _0x202006C
000689 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00068a 5031      	SUBI R19,LOW(1)
00068b 85a8      	LDD  R26,Y+8
00068c 85b9      	LDD  R27,Y+8+1
00068d 9712      	SBIW R26,2
00068e f008      	BRLO _0x2020059
00068f cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000690 ff00      	SBRS R16,0
000691 c008      	RJMP _0x202006D
                 _0x202006E:
000692 3050      	CPI  R21,0
000693 f031      	BREQ _0x2020070
000694 5051      	SUBI R21,LOW(1)
000695 e2e0      	LDI  R30,LOW(32)
000696 93ea      	ST   -Y,R30
000697 940e 0858 	CALL SUBOPT_0x21
000699 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00069a e010      	LDI  R17,LOW(0)
                 _0x202001B:
00069b cee0      	RJMP _0x2020016
                 _0x2020018:
00069c 85ac      	LDD  R26,Y+12
00069d 85bd      	LDD  R27,Y+12+1
00069e 940e 08cf 	CALL __GETW1P
0006a0 940e 08e3 	CALL __LOADLOCR6
0006a2 9664      	ADIW R28,20
0006a3 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0006a4 92ff      	PUSH R15
0006a5 2ef8      	MOV  R15,R24
0006a6 9726      	SBIW R28,6
0006a7 940e 08de 	CALL __SAVELOCR4
0006a9 940e 0870 	CALL SUBOPT_0x24
0006ab 9730      	SBIW R30,0
0006ac f419      	BRNE _0x2020072
0006ad efef      	LDI  R30,LOW(65535)
0006ae efff      	LDI  R31,HIGH(65535)
0006af c023      	RJMP _0x20C0001
                 _0x2020072:
0006b0 01de      	MOVW R26,R28
0006b1 9616      	ADIW R26,6
0006b2 940e 0881 	CALL __ADDW2R15
0006b4 018d      	MOVW R16,R26
0006b5 940e 0870 	CALL SUBOPT_0x24
0006b7 83ee      	STD  Y+6,R30
0006b8 83ff      	STD  Y+6+1,R31
0006b9 e0e0      	LDI  R30,LOW(0)
0006ba 87e8      	STD  Y+8,R30
0006bb 87e9      	STD  Y+8+1,R30
0006bc 01de      	MOVW R26,R28
0006bd 961a      	ADIW R26,10
0006be 940e 0881 	CALL __ADDW2R15
0006c0 940e 08cf 	CALL __GETW1P
0006c2 93fa      	ST   -Y,R31
0006c3 93ea      	ST   -Y,R30
0006c4 931a      	ST   -Y,R17
0006c5 930a      	ST   -Y,R16
0006c6 e3e0      	LDI  R30,LOW(_put_buff_G101)
0006c7 e0f5      	LDI  R31,HIGH(_put_buff_G101)
0006c8 93fa      	ST   -Y,R31
0006c9 93ea      	ST   -Y,R30
0006ca 01de      	MOVW R26,R28
0006cb 961a      	ADIW R26,10
0006cc dea3      	RCALL __print_G101
0006cd 019f      	MOVW R18,R30
0006ce 81ae      	LDD  R26,Y+6
0006cf 81bf      	LDD  R27,Y+6+1
0006d0 e0e0      	LDI  R30,LOW(0)
0006d1 93ec      	ST   X,R30
0006d2 01f9      	MOVW R30,R18
                 _0x20C0001:
0006d3 940e 08e5 	CALL __LOADLOCR4
0006d5 962a      	ADIW R28,10
0006d6 90ff      	POP  R15
0006d7 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 _rand:
                 ; .FSTART _rand
0006d8 91e0 03d4 	LDS  R30,__seed_G102
0006da 91f0 03d5 	LDS  R31,__seed_G102+1
0006dc 9160 03d6 	LDS  R22,__seed_G102+2
0006de 9170 03d7 	LDS  R23,__seed_G102+3
                +
0006e0 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
0006e1 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
0006e2 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
0006e3 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
0006e4 940e 088e 	CALL __MULD12U
                +
0006e6 59ee     +SUBI R30 , LOW ( - 30562 )
0006e7 48f8     +SBCI R31 , HIGH ( - 30562 )
0006e8 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
0006e9 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
0006ea 93e0 03d4 	STS  __seed_G102,R30
0006ec 93f0 03d5 	STS  __seed_G102+1,R31
0006ee 9360 03d6 	STS  __seed_G102+2,R22
0006f0 9370 03d7 	STS  __seed_G102+3,R23
0006f2 01fb      	movw r30,r22
0006f3 77ff      	andi r31,0x7F
0006f4 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0006f5 93ba      	ST   -Y,R27
0006f6 93aa      	ST   -Y,R26
0006f7 91a9          ld   r26,y+
0006f8 91b9          ld   r27,y+
0006f9 27ee          clr  r30
0006fa 27ff          clr  r31
                 strlen0:
0006fb 916d          ld   r22,x+
0006fc 2366          tst  r22
0006fd f011          breq strlen1
0006fe 9631          adiw r30,1
0006ff cffb          rjmp strlen0
                 strlen1:
000700 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000701 93ba      	ST   -Y,R27
000702 93aa      	ST   -Y,R26
000703 27aa          clr  r26
000704 27bb          clr  r27
000705 91e9          ld   r30,y+
000706 91f9          ld   r31,y+
                 strlenf0:
000707 9005      	lpm  r0,z+
000708 2000          tst  r0
000709 f011          breq strlenf1
00070a 9611          adiw r26,1
00070b cffb          rjmp strlenf0
                 strlenf1:
00070c 01fd          movw r30,r26
00070d 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _pressed:
0003be           	.BYTE 0x12
                 __base_y_G100:
0003d0           	.BYTE 0x4
                 __seed_G102:
0003d4           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00070e 931a      	ST   -Y,R17
00070f 930a      	ST   -Y,R16
                +
000710 e000     +LDI R16 , LOW ( 0 )
000711 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000712 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000713 e0a1      	LDI  R26,LOW(1)
000714 e0b0      	LDI  R27,0
000715 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000717 01f8      	MOVW R30,R16
000718 ebae      	LDI  R26,LOW(_pressed)
000719 e0b3      	LDI  R27,HIGH(_pressed)
00071a 0fee      	LSL  R30
00071b 1fff      	ROL  R31
00071c 0fae      	ADD  R26,R30
00071d 1fbf      	ADC  R27,R31
00071e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x3:
00071f e6a4      	LDI  R26,LOW(100)
000720 e0b0      	LDI  R27,0
000721 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000723 940e 04d0 	CALL _lcd_clear
000725 01fe      	MOVW R30,R28
000726 9632      	ADIW R30,2
000727 93fa      	ST   -Y,R31
000728 93ea      	ST   -Y,R30
000729 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
00072a 940e 0889 	CALL __CWD1
00072c 940e 08d7 	CALL __PUTPARD1
00072e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
00072f e0e0      	LDI  R30,LOW(0)
000730 93ea      	ST   -Y,R30
000731 e0a0      	LDI  R26,LOW(0)
000732 940e 04c3 	CALL _lcd_gotoxy
000734 01de      	MOVW R26,R28
000735 9612      	ADIW R26,2
000736 940c 04f1 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000738 e0e0      	LDI  R30,LOW(0)
000739 93ea      	ST   -Y,R30
00073a e0a1      	LDI  R26,LOW(1)
00073b 940c 04c3 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
00073d 01f8      	MOVW R30,R16
00073e 30e1      	CPI  R30,LOW(0x1)
00073f e0a0      	LDI  R26,HIGH(0x1)
000740 07fa      	CPC  R31,R26
000741 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0x9:
000742 01d8      	MOVW R26,R16
000743 940e 0160 	CALL _check_key
000745 e0e0      	LDI  R30,LOW(0)
000746 83e8      	STD  Y+0,R30
000747 83e9      	STD  Y+0+1,R30
000748 ebac      	LDI  R26,LOW(700)
000749 e0b2      	LDI  R27,HIGH(700)
00074a 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA:
                +
00074c 5f4f     +SUBI R20 , LOW ( - 1 )
00074d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00074e 940c 04d0 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0xB:
000750 940e 04f1 	CALL _lcd_puts
000752 e2ac      	LDI  R26,LOW(300)
000753 e0b1      	LDI  R27,HIGH(300)
000754 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
000756 98a8      	CBI  0x15,0
000757 98a9      	CBI  0x15,1
000758 98aa      	CBI  0x15,2
000759 e2ac      	LDI  R26,LOW(300)
00075a e0b1      	LDI  R27,HIGH(300)
00075b 940e 0877 	CALL _delay_ms
00075d 9aa8      	SBI  0x15,0
00075e 9aa9      	SBI  0x15,1
00075f 9aaa      	SBI  0x15,2
000760 e2ac      	LDI  R26,LOW(300)
000761 e0b1      	LDI  R27,HIGH(300)
000762 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
000764 98ab      	CBI  0x15,3
000765 98ac      	CBI  0x15,4
000766 98ad      	CBI  0x15,5
000767 e2ac      	LDI  R26,LOW(300)
000768 e0b1      	LDI  R27,HIGH(300)
000769 940e 0877 	CALL _delay_ms
00076b 9aab      	SBI  0x15,3
00076c 9aac      	SBI  0x15,4
00076d 9aad      	SBI  0x15,5
00076e e2ac      	LDI  R26,LOW(300)
00076f e0b1      	LDI  R27,HIGH(300)
000770 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
000772 98ae      	CBI  0x15,6
000773 98af      	CBI  0x15,7
000774 98c6      	CBI  0x18,6
000775 e2ac      	LDI  R26,LOW(300)
000776 e0b1      	LDI  R27,HIGH(300)
000777 940e 0877 	CALL _delay_ms
000779 9aae      	SBI  0x15,6
00077a 9aaf      	SBI  0x15,7
00077b 9ac6      	SBI  0x18,6
00077c e2ac      	LDI  R26,LOW(300)
00077d e0b1      	LDI  R27,HIGH(300)
00077e 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
000780 98a8      	CBI  0x15,0
000781 98ab      	CBI  0x15,3
000782 98ae      	CBI  0x15,6
000783 e2ac      	LDI  R26,LOW(300)
000784 e0b1      	LDI  R27,HIGH(300)
000785 940e 0877 	CALL _delay_ms
000787 9aa8      	SBI  0x15,0
000788 9aab      	SBI  0x15,3
000789 9aae      	SBI  0x15,6
00078a e2ac      	LDI  R26,LOW(300)
00078b e0b1      	LDI  R27,HIGH(300)
00078c 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
00078e 98a9      	CBI  0x15,1
00078f 98ac      	CBI  0x15,4
000790 98af      	CBI  0x15,7
000791 e2ac      	LDI  R26,LOW(300)
000792 e0b1      	LDI  R27,HIGH(300)
000793 940e 0877 	CALL _delay_ms
000795 9aa9      	SBI  0x15,1
000796 9aac      	SBI  0x15,4
000797 9aaf      	SBI  0x15,7
000798 e2ac      	LDI  R26,LOW(300)
000799 e0b1      	LDI  R27,HIGH(300)
00079a 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
00079c 98aa      	CBI  0x15,2
00079d 98ad      	CBI  0x15,5
00079e 98c6      	CBI  0x18,6
00079f e2ac      	LDI  R26,LOW(300)
0007a0 e0b1      	LDI  R27,HIGH(300)
0007a1 940e 0877 	CALL _delay_ms
0007a3 9aaa      	SBI  0x15,2
0007a4 9aad      	SBI  0x15,5
0007a5 9ac6      	SBI  0x18,6
0007a6 e2ac      	LDI  R26,LOW(300)
0007a7 e0b1      	LDI  R27,HIGH(300)
0007a8 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x12:
0007aa 98a8      	CBI  0x15,0
0007ab 98ac      	CBI  0x15,4
0007ac 98c6      	CBI  0x18,6
0007ad e2ac      	LDI  R26,LOW(300)
0007ae e0b1      	LDI  R27,HIGH(300)
0007af 940e 0877 	CALL _delay_ms
0007b1 9aa8      	SBI  0x15,0
0007b2 9aac      	SBI  0x15,4
0007b3 9ac6      	SBI  0x18,6
0007b4 e2ac      	LDI  R26,LOW(300)
0007b5 e0b1      	LDI  R27,HIGH(300)
0007b6 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
0007b8 98aa      	CBI  0x15,2
0007b9 98ac      	CBI  0x15,4
0007ba 98ae      	CBI  0x15,6
0007bb e2ac      	LDI  R26,LOW(300)
0007bc e0b1      	LDI  R27,HIGH(300)
0007bd 940e 0877 	CALL _delay_ms
0007bf 9aaa      	SBI  0x15,2
0007c0 9aac      	SBI  0x15,4
0007c1 9aae      	SBI  0x15,6
0007c2 e2ac      	LDI  R26,LOW(300)
0007c3 e0b1      	LDI  R27,HIGH(300)
0007c4 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x14:
0007c6 a1ea      	LDD  R30,Y+34
0007c7 a1fb      	LDD  R31,Y+34+1
0007c8 9631      	ADIW R30,1
0007c9 a3ea      	STD  Y+34,R30
0007ca a3fb      	STD  Y+34+1,R31
0007cb 940c 04d0 	JMP  _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15:
0007cd 9890      	CBI  0x12,0
0007ce 9891      	CBI  0x12,1
0007cf 9892      	CBI  0x12,2
0007d0 e2ac      	LDI  R26,LOW(300)
0007d1 e0b1      	LDI  R27,HIGH(300)
0007d2 940e 0877 	CALL _delay_ms
0007d4 9a90      	SBI  0x12,0
0007d5 9a91      	SBI  0x12,1
0007d6 9a92      	SBI  0x12,2
0007d7 e2ac      	LDI  R26,LOW(300)
0007d8 e0b1      	LDI  R27,HIGH(300)
0007d9 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
0007db 9893      	CBI  0x12,3
0007dc 9894      	CBI  0x12,4
0007dd 9895      	CBI  0x12,5
0007de e2ac      	LDI  R26,LOW(300)
0007df e0b1      	LDI  R27,HIGH(300)
0007e0 940e 0877 	CALL _delay_ms
0007e2 9a93      	SBI  0x12,3
0007e3 9a94      	SBI  0x12,4
0007e4 9a95      	SBI  0x12,5
0007e5 e2ac      	LDI  R26,LOW(300)
0007e6 e0b1      	LDI  R27,HIGH(300)
0007e7 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
0007e9 9896      	CBI  0x12,6
0007ea 9897      	CBI  0x12,7
0007eb 98c7      	CBI  0x18,7
0007ec e2ac      	LDI  R26,LOW(300)
0007ed e0b1      	LDI  R27,HIGH(300)
0007ee 940e 0877 	CALL _delay_ms
0007f0 9a96      	SBI  0x12,6
0007f1 9a97      	SBI  0x12,7
0007f2 9ac7      	SBI  0x18,7
0007f3 e2ac      	LDI  R26,LOW(300)
0007f4 e0b1      	LDI  R27,HIGH(300)
0007f5 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
0007f7 9890      	CBI  0x12,0
0007f8 9893      	CBI  0x12,3
0007f9 9896      	CBI  0x12,6
0007fa e2ac      	LDI  R26,LOW(300)
0007fb e0b1      	LDI  R27,HIGH(300)
0007fc 940e 0877 	CALL _delay_ms
0007fe 9a90      	SBI  0x12,0
0007ff 9a93      	SBI  0x12,3
000800 9a96      	SBI  0x12,6
000801 e2ac      	LDI  R26,LOW(300)
000802 e0b1      	LDI  R27,HIGH(300)
000803 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19:
000805 9891      	CBI  0x12,1
000806 9894      	CBI  0x12,4
000807 9897      	CBI  0x12,7
000808 e2ac      	LDI  R26,LOW(300)
000809 e0b1      	LDI  R27,HIGH(300)
00080a 940e 0877 	CALL _delay_ms
00080c 9a91      	SBI  0x12,1
00080d 9a94      	SBI  0x12,4
00080e 9a97      	SBI  0x12,7
00080f e2ac      	LDI  R26,LOW(300)
000810 e0b1      	LDI  R27,HIGH(300)
000811 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
000813 9892      	CBI  0x12,2
000814 9895      	CBI  0x12,5
000815 98c7      	CBI  0x18,7
000816 e2ac      	LDI  R26,LOW(300)
000817 e0b1      	LDI  R27,HIGH(300)
000818 940e 0877 	CALL _delay_ms
00081a 9a92      	SBI  0x12,2
00081b 9a95      	SBI  0x12,5
00081c 9ac7      	SBI  0x18,7
00081d e2ac      	LDI  R26,LOW(300)
00081e e0b1      	LDI  R27,HIGH(300)
00081f 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
000821 9890      	CBI  0x12,0
000822 9894      	CBI  0x12,4
000823 98c7      	CBI  0x18,7
000824 e2ac      	LDI  R26,LOW(300)
000825 e0b1      	LDI  R27,HIGH(300)
000826 940e 0877 	CALL _delay_ms
000828 9a90      	SBI  0x12,0
000829 9a94      	SBI  0x12,4
00082a 9ac7      	SBI  0x18,7
00082b e2ac      	LDI  R26,LOW(300)
00082c e0b1      	LDI  R27,HIGH(300)
00082d 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C:
00082f 9896      	CBI  0x12,6
000830 9894      	CBI  0x12,4
000831 9892      	CBI  0x12,2
000832 e2ac      	LDI  R26,LOW(300)
000833 e0b1      	LDI  R27,HIGH(300)
000834 940e 0877 	CALL _delay_ms
000836 9a96      	SBI  0x12,6
000837 9a94      	SBI  0x12,4
000838 9a92      	SBI  0x12,2
000839 e2ac      	LDI  R26,LOW(300)
00083a e0b1      	LDI  R27,HIGH(300)
00083b 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
00083d 940e 04b7 	CALL __lcd_write_data
00083f e0a3      	LDI  R26,LOW(3)
000840 e0b0      	LDI  R27,0
000841 940c 0877 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1E:
000843 e3a0      	LDI  R26,LOW(48)
000844 940e 04a3 	CALL __lcd_write_nibble_G100
                +
000846 ec88     +LDI R24 , LOW ( 200 )
000847 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000848 9701     +SBIW R24 , 1
000849 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00084a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1F:
00084b 932a      	ST   -Y,R18
00084c 85ad      	LDD  R26,Y+13
00084d 85be      	LDD  R27,Y+13+1
00084e 85ef      	LDD  R30,Y+15
00084f 89f8      	LDD  R31,Y+15+1
000850 9509      	ICALL
000851 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
000852 89e8      	LDD  R30,Y+16
000853 89f9      	LDD  R31,Y+16+1
000854 9734      	SBIW R30,4
000855 8be8      	STD  Y+16,R30
000856 8bf9      	STD  Y+16+1,R31
000857 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21:
000858 85ad      	LDD  R26,Y+13
000859 85be      	LDD  R27,Y+13+1
00085a 85ef      	LDD  R30,Y+15
00085b 89f8      	LDD  R31,Y+15+1
00085c 9509      	ICALL
00085d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x22:
00085e 89a8      	LDD  R26,Y+16
00085f 89b9      	LDD  R27,Y+16+1
000860 9614      	ADIW R26,4
000861 940e 08cf 	CALL __GETW1P
000863 83ee      	STD  Y+6,R30
000864 83ff      	STD  Y+6+1,R31
000865 81ae      	LDD  R26,Y+6
000866 81bf      	LDD  R27,Y+6+1
000867 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
000868 89a8      	LDD  R26,Y+16
000869 89b9      	LDD  R27,Y+16+1
00086a 9614      	ADIW R26,4
00086b 940e 08cf 	CALL __GETW1P
00086d 87ea      	STD  Y+10,R30
00086e 87fb      	STD  Y+10+1,R31
00086f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000870 01de      	MOVW R26,R28
000871 961c      	ADIW R26,12
000872 940e 0881 	CALL __ADDW2R15
000874 940e 08cf 	CALL __GETW1P
000876 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000877 9610      	adiw r26,0
000878 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000879 ed80     +LDI R24 , LOW ( 0x7D0 )
00087a e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00087b 9701     +SBIW R24 , 1
00087c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00087d 95a8      	wdr
00087e 9711      	sbiw r26,1
00087f f7c9      	brne __delay_ms0
                 __delay_ms1:
000880 9508      	ret
                 
                 __ADDW2R15:
000881 2400      	CLR  R0
000882 0daf      	ADD  R26,R15
000883 1db0      	ADC  R27,R0
000884 9508      	RET
                 
                 __ANEGW1:
000885 95f1      	NEG  R31
000886 95e1      	NEG  R30
000887 40f0      	SBCI R31,0
000888 9508      	RET
                 
                 __CWD1:
000889 2f6f      	MOV  R22,R31
00088a 0f66      	ADD  R22,R22
00088b 0b66      	SBC  R22,R22
00088c 2f76      	MOV  R23,R22
00088d 9508      	RET
                 
                 __MULD12U:
00088e 9f7a      	MUL  R23,R26
00088f 2d70      	MOV  R23,R0
000890 9f6b      	MUL  R22,R27
000891 0d70      	ADD  R23,R0
000892 9ff8      	MUL  R31,R24
000893 0d70      	ADD  R23,R0
000894 9fe9      	MUL  R30,R25
000895 0d70      	ADD  R23,R0
000896 9f6a      	MUL  R22,R26
000897 2d60      	MOV  R22,R0
000898 0d71      	ADD  R23,R1
000899 9ffb      	MUL  R31,R27
00089a 0d60      	ADD  R22,R0
00089b 1d71      	ADC  R23,R1
00089c 9fe8      	MUL  R30,R24
00089d 0d60      	ADD  R22,R0
00089e 1d71      	ADC  R23,R1
00089f 2788      	CLR  R24
0008a0 9ffa      	MUL  R31,R26
0008a1 2df0      	MOV  R31,R0
0008a2 0d61      	ADD  R22,R1
0008a3 1f78      	ADC  R23,R24
0008a4 9feb      	MUL  R30,R27
0008a5 0df0      	ADD  R31,R0
0008a6 1d61      	ADC  R22,R1
0008a7 1f78      	ADC  R23,R24
0008a8 9fea      	MUL  R30,R26
0008a9 2de0      	MOV  R30,R0
0008aa 0df1      	ADD  R31,R1
0008ab 1f68      	ADC  R22,R24
0008ac 1f78      	ADC  R23,R24
0008ad 9508      	RET
                 
                 __DIVW21U:
0008ae 2400      	CLR  R0
0008af 2411      	CLR  R1
0008b0 e190      	LDI  R25,16
                 __DIVW21U1:
0008b1 0faa      	LSL  R26
0008b2 1fbb      	ROL  R27
0008b3 1c00      	ROL  R0
0008b4 1c11      	ROL  R1
0008b5 1a0e      	SUB  R0,R30
0008b6 0a1f      	SBC  R1,R31
0008b7 f418      	BRCC __DIVW21U2
0008b8 0e0e      	ADD  R0,R30
0008b9 1e1f      	ADC  R1,R31
0008ba c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0008bb 60a1      	SBR  R26,1
                 __DIVW21U3:
0008bc 959a      	DEC  R25
0008bd f799      	BRNE __DIVW21U1
0008be 01fd      	MOVW R30,R26
0008bf 01d0      	MOVW R26,R0
0008c0 9508      	RET
                 
                 __MODW21:
0008c1 94e8      	CLT
0008c2 ffb7      	SBRS R27,7
0008c3 c004      	RJMP __MODW211
0008c4 95a0      	COM  R26
0008c5 95b0      	COM  R27
0008c6 9611      	ADIW R26,1
0008c7 9468      	SET
                 __MODW211:
0008c8 fdf7      	SBRC R31,7
0008c9 dfbb      	RCALL __ANEGW1
0008ca dfe3      	RCALL __DIVW21U
0008cb 01fd      	MOVW R30,R26
0008cc f40e      	BRTC __MODW212
0008cd dfb7      	RCALL __ANEGW1
                 __MODW212:
0008ce 9508      	RET
                 
                 __GETW1P:
0008cf 91ed      	LD   R30,X+
0008d0 91fc      	LD   R31,X
0008d1 9711      	SBIW R26,1
0008d2 9508      	RET
                 
                 __GETW1PF:
0008d3 9005      	LPM  R0,Z+
0008d4 91f4      	LPM  R31,Z
0008d5 2de0      	MOV  R30,R0
0008d6 9508      	RET
                 
                 __PUTPARD1:
0008d7 937a      	ST   -Y,R23
0008d8 936a      	ST   -Y,R22
0008d9 93fa      	ST   -Y,R31
0008da 93ea      	ST   -Y,R30
0008db 9508      	RET
                 
                 __SAVELOCR6:
0008dc 935a      	ST   -Y,R21
                 __SAVELOCR5:
0008dd 934a      	ST   -Y,R20
                 __SAVELOCR4:
0008de 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008df 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008e0 931a      	ST   -Y,R17
0008e1 930a      	ST   -Y,R16
0008e2 9508      	RET
                 
                 __LOADLOCR6:
0008e3 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0008e4 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0008e5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0008e6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0008e7 8119      	LDD  R17,Y+1
0008e8 8108      	LD   R16,Y
0008e9 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0008ea 0fac      	ADD  R26,R28
0008eb 1fbd      	ADC  R27,R29
                 __INITLOC0:
0008ec 9005      	LPM  R0,Z+
0008ed 920d      	ST   X+,R0
0008ee 958a      	DEC  R24
0008ef f7e1      	BRNE __INITLOC0
0008f0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  36 r1 :  11 r2 :   5 r3 :   0 r4 :   5 r5 :   2 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  73 r17:  57 r18:  33 r19:  11 r20:  13 r21:  19 r22:  24 r23:  17 
r24:  35 r25:   9 r26: 240 r27: 111 r28:  26 r29:   2 r30: 285 r31: 123 
x  :  26 y  : 207 z  :  18 
Registers used: 28 out of 35 (80.0%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  12 add   :  17 
adiw  :  38 and   :   0 andi  :   9 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  17 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  67 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 185 
cbi   :  74 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  12 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   6 cpc   :  32 cpi   :  61 cpse  :   0 dec   :   7 des   :   0 
eor   :   2 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   2 jmp   :  47 ld    :  30 ldd   :  94 ldi   : 308 
lds   :   4 lpm   :  15 lsl   :   5 lsr   :   0 mov   :  29 movw  :  36 
mul   :  11 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   5 
ori   :   8 out   :  18 pop   :   1 push  :   1 rcall :  38 ret   :  37 
reti  :   0 rjmp  : 228 rol   :   5 ror   :   2 sbc   :   3 sbci  :  18 
sbi   :  83 sbic  :  36 sbis  :  41 sbiw  :  24 sbr   :   1 sbrc  :   5 
sbrs  :  12 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  75 std   :  39 sts   :   6 sub   :   2 subi  :  30 swap  :   2 
tst   :   4 wdr   :   1 
Instructions used: 67 out of 116 (57.8%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0011e2   4228    350   4578   32768  14.0%
[.dseg] 0x000060 0x0003d8      0    376    376    2048  18.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 7 warnings
